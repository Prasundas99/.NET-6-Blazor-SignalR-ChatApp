// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebAPI/rules_1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rules1 {

  /// <summary>Holder for reflection information generated from WebAPI/rules_1.proto</summary>
  public static partial class Rules1Reflection {

    #region Descriptor
    /// <summary>File descriptor for WebAPI/rules_1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Rules1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRXZWJBUEkvcnVsZXNfMS5wcm90bxIHcnVsZXNfMRoVY29tbW9uL3NoYXJl",
            "ZF8xLnByb3RvGhZjb21tb24vdGltZXN0YW1wLnByb3RvIo8CCgtSdWxlUmVx",
            "dWVzdBISCgpyZXF1ZXN0X2lkGAEgAigJEjEKEHNldF9ydWxlX3JlcXVlc3QY",
            "AiABKAsyFy5ydWxlc18xLlNldFJ1bGVSZXF1ZXN0EjcKE2RlbGV0ZV9ydWxl",
            "X3JlcXVlc3QYAyABKAsyGi5ydWxlc18xLkRlbGV0ZVJ1bGVSZXF1ZXN0EjUK",
            "EnJ1bGVzX2xpc3RfcmVxdWVzdBgEIAEoCzIZLnJ1bGVzXzEuUnVsZXNMaXN0",
            "UmVxdWVzdBJJChxub3RpZmljYXRpb25faGlzdG9yeV9yZXF1ZXN0GAUgASgL",
            "MiMucnVsZXNfMS5Ob3RpZmljYXRpb25IaXN0b3J5UmVxdWVzdCLkAgoKUnVs",
            "ZVJlc3VsdBISCgpyZXF1ZXN0X2lkGAEgAigJEhMKC3Jlc3VsdF9jb2RlGAIg",
            "AigNEh8KB2RldGFpbHMYAyABKAsyDi5zaGFyZWRfMS5UZXh0Ei8KD3NldF9y",
            "dWxlX3Jlc3VsdBgEIAEoCzIWLnJ1bGVzXzEuU2V0UnVsZVJlc3VsdBI1ChJk",
            "ZWxldGVfcnVsZV9yZXN1bHQYBSABKAsyGS5ydWxlc18xLkRlbGV0ZVJ1bGVS",
            "ZXN1bHQSMwoRcnVsZXNfbGlzdF9yZXN1bHQYBiABKAsyGC5ydWxlc18xLlJ1",
            "bGVzTGlzdFJlc3VsdBJHChtub3RpZmljYXRpb25faGlzdG9yeV9yZXN1bHQY",
            "ByABKAsyIi5ydWxlc18xLk5vdGlmaWNhdGlvbkhpc3RvcnlSZXN1bHQiJgoK",
            "UmVzdWx0Q29kZRILCgdTVUNDRVNTEAASCwoHRkFJTFVSRRBlIuQBCg5SdWxl",
            "RGVmaW5pdGlvbhIPCgdydWxlX2lkGAEgAigJEhQKCHJ1bGVfdGFnGAIgAygJ",
            "QgIYARJAChhleHBpcmF0aW9uX3V0Y190aW1lc3RhbXAYAyABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wQgIYARIfCgZhY3Rpb24YBCADKAsyDy5y",
            "dWxlc18xLkFjdGlvbhIxChBvcmRlcl9ldmVudF9ydWxlGAUgASgLMhcucnVs",
            "ZXNfMS5PcmRlckV2ZW50UnVsZRIVCgdlbmFibGVkGAYgASgIOgR0cnVlIjQK",
            "BkFjdGlvbhIqCgtkZXN0aW5hdGlvbhgEIAMoCzIVLnNoYXJlZF8xLkRlc3Rp",
            "bmF0aW9uIlYKDk9yZGVyRXZlbnRSdWxlEhIKCmFjY291bnRfaWQYASADKBES",
            "FAoMb3JkZXJfc3RhdHVzGAIgAygNEhoKEnRyYW5zYWN0aW9uX3N0YXR1cxgD",
            "IAMoDSLZAQoSTm90aWZpY2F0aW9uUmVwb3J0Eh0KBXRpdGxlGAEgAigLMg4u",
            "c2hhcmVkXzEuVGV4dBIcCgRib2R5GAIgAigLMg4uc2hhcmVkXzEuVGV4dBIP",
            "CgdydWxlX2lkGAMgAigJEj0KFW5vdGlmaWNhdGlvbl9wcm9wZXJ0eRgEIAMo",
            "CzIeLnNoYXJlZF8xLk5vdGlmaWNhdGlvblByb3BlcnR5EjYKEndoZW5fdXRj",
            "X3RpbWVzdGFtcBgFIAIoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi",
            "QgoOU2V0UnVsZVJlcXVlc3QSMAoPcnVsZV9kZWZpbml0aW9uGAEgAigLMhcu",
            "cnVsZXNfMS5SdWxlRGVmaW5pdGlvbiIPCg1TZXRSdWxlUmVzdWx0IiQKEURl",
            "bGV0ZVJ1bGVSZXF1ZXN0Eg8KB3J1bGVfaWQYASACKAkiEgoQRGVsZXRlUnVs",
            "ZVJlc3VsdCIoChBSdWxlc0xpc3RSZXF1ZXN0EhQKCHJ1bGVfdGFnGAEgAygJ",
            "QgIYASJDCg9SdWxlc0xpc3RSZXN1bHQSMAoPcnVsZV9kZWZpbml0aW9uGAEg",
            "AygLMhcucnVsZXNfMS5SdWxlRGVmaW5pdGlvbiKKAQoaTm90aWZpY2F0aW9u",
            "SGlzdG9yeVJlcXVlc3QSNgoSZnJvbV91dGNfdGltZXN0YW1wGAEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI0ChB0b191dGNfdGltZXN0YW1w",
            "GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJVChlOb3RpZmlj",
            "YXRpb25IaXN0b3J5UmVzdWx0EjgKE25vdGlmaWNhdGlvbl9yZXBvcnQYASAD",
            "KAsyGy5ydWxlc18xLk5vdGlmaWNhdGlvblJlcG9ydA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Shared1.Shared1Reflection.Descriptor, global::Google.Protobuf.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.RuleRequest), global::Rules1.RuleRequest.Parser, new[]{ "RequestId", "SetRuleRequest", "DeleteRuleRequest", "RulesListRequest", "NotificationHistoryRequest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.RuleResult), global::Rules1.RuleResult.Parser, new[]{ "RequestId", "ResultCode", "Details", "SetRuleResult", "DeleteRuleResult", "RulesListResult", "NotificationHistoryResult" }, null, new[]{ typeof(global::Rules1.RuleResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.RuleDefinition), global::Rules1.RuleDefinition.Parser, new[]{ "RuleId", "RuleTag", "ExpirationUtcTimestamp", "Action", "OrderEventRule", "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.Action), global::Rules1.Action.Parser, new[]{ "Destination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.OrderEventRule), global::Rules1.OrderEventRule.Parser, new[]{ "AccountId", "OrderStatus", "TransactionStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.NotificationReport), global::Rules1.NotificationReport.Parser, new[]{ "Title", "Body", "RuleId", "NotificationProperty", "WhenUtcTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.SetRuleRequest), global::Rules1.SetRuleRequest.Parser, new[]{ "RuleDefinition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.SetRuleResult), global::Rules1.SetRuleResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.DeleteRuleRequest), global::Rules1.DeleteRuleRequest.Parser, new[]{ "RuleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.DeleteRuleResult), global::Rules1.DeleteRuleResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.RulesListRequest), global::Rules1.RulesListRequest.Parser, new[]{ "RuleTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.RulesListResult), global::Rules1.RulesListResult.Parser, new[]{ "RuleDefinition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.NotificationHistoryRequest), global::Rules1.NotificationHistoryRequest.Parser, new[]{ "FromUtcTimestamp", "ToUtcTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rules1.NotificationHistoryResult), global::Rules1.NotificationHistoryResult.Parser, new[]{ "NotificationReport" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Client rule messages.
  /// Only one rule operation is allowed.
  /// </summary>
  public sealed partial class RuleRequest : pb::IMessage<RuleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuleRequest> _parser = new pb::MessageParser<RuleRequest>(() => new RuleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleRequest(RuleRequest other) : this() {
      requestId_ = other.requestId_;
      setRuleRequest_ = other.setRuleRequest_ != null ? other.setRuleRequest_.Clone() : null;
      deleteRuleRequest_ = other.deleteRuleRequest_ != null ? other.deleteRuleRequest_.Clone() : null;
      rulesListRequest_ = other.rulesListRequest_ != null ? other.rulesListRequest_.Clone() : null;
      notificationHistoryRequest_ = other.notificationHistoryRequest_ != null ? other.notificationHistoryRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleRequest Clone() {
      return new RuleRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static string RequestIdDefaultValue = "";

    private string requestId_;
    /// <summary>
    /// Request identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_ ?? RequestIdDefaultValue; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return requestId_ != null; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      requestId_ = null;
    }

    /// <summary>Field number for the "set_rule_request" field.</summary>
    public const int SetRuleRequestFieldNumber = 2;
    private global::Rules1.SetRuleRequest setRuleRequest_;
    /// <summary>
    /// Create or update a rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.SetRuleRequest SetRuleRequest {
      get { return setRuleRequest_; }
      set {
        setRuleRequest_ = value;
      }
    }

    /// <summary>Field number for the "delete_rule_request" field.</summary>
    public const int DeleteRuleRequestFieldNumber = 3;
    private global::Rules1.DeleteRuleRequest deleteRuleRequest_;
    /// <summary>
    /// Delete a rule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.DeleteRuleRequest DeleteRuleRequest {
      get { return deleteRuleRequest_; }
      set {
        deleteRuleRequest_ = value;
      }
    }

    /// <summary>Field number for the "rules_list_request" field.</summary>
    public const int RulesListRequestFieldNumber = 4;
    private global::Rules1.RulesListRequest rulesListRequest_;
    /// <summary>
    /// Get a list of rules.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.RulesListRequest RulesListRequest {
      get { return rulesListRequest_; }
      set {
        rulesListRequest_ = value;
      }
    }

    /// <summary>Field number for the "notification_history_request" field.</summary>
    public const int NotificationHistoryRequestFieldNumber = 5;
    private global::Rules1.NotificationHistoryRequest notificationHistoryRequest_;
    /// <summary>
    /// Request notification history.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.NotificationHistoryRequest NotificationHistoryRequest {
      get { return notificationHistoryRequest_; }
      set {
        notificationHistoryRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(SetRuleRequest, other.SetRuleRequest)) return false;
      if (!object.Equals(DeleteRuleRequest, other.DeleteRuleRequest)) return false;
      if (!object.Equals(RulesListRequest, other.RulesListRequest)) return false;
      if (!object.Equals(NotificationHistoryRequest, other.NotificationHistoryRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (setRuleRequest_ != null) hash ^= SetRuleRequest.GetHashCode();
      if (deleteRuleRequest_ != null) hash ^= DeleteRuleRequest.GetHashCode();
      if (rulesListRequest_ != null) hash ^= RulesListRequest.GetHashCode();
      if (notificationHistoryRequest_ != null) hash ^= NotificationHistoryRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (setRuleRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SetRuleRequest);
      }
      if (deleteRuleRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeleteRuleRequest);
      }
      if (rulesListRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RulesListRequest);
      }
      if (notificationHistoryRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NotificationHistoryRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (setRuleRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SetRuleRequest);
      }
      if (deleteRuleRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DeleteRuleRequest);
      }
      if (rulesListRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RulesListRequest);
      }
      if (notificationHistoryRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NotificationHistoryRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (setRuleRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetRuleRequest);
      }
      if (deleteRuleRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteRuleRequest);
      }
      if (rulesListRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RulesListRequest);
      }
      if (notificationHistoryRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationHistoryRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.setRuleRequest_ != null) {
        if (setRuleRequest_ == null) {
          SetRuleRequest = new global::Rules1.SetRuleRequest();
        }
        SetRuleRequest.MergeFrom(other.SetRuleRequest);
      }
      if (other.deleteRuleRequest_ != null) {
        if (deleteRuleRequest_ == null) {
          DeleteRuleRequest = new global::Rules1.DeleteRuleRequest();
        }
        DeleteRuleRequest.MergeFrom(other.DeleteRuleRequest);
      }
      if (other.rulesListRequest_ != null) {
        if (rulesListRequest_ == null) {
          RulesListRequest = new global::Rules1.RulesListRequest();
        }
        RulesListRequest.MergeFrom(other.RulesListRequest);
      }
      if (other.notificationHistoryRequest_ != null) {
        if (notificationHistoryRequest_ == null) {
          NotificationHistoryRequest = new global::Rules1.NotificationHistoryRequest();
        }
        NotificationHistoryRequest.MergeFrom(other.NotificationHistoryRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            if (setRuleRequest_ == null) {
              SetRuleRequest = new global::Rules1.SetRuleRequest();
            }
            input.ReadMessage(SetRuleRequest);
            break;
          }
          case 26: {
            if (deleteRuleRequest_ == null) {
              DeleteRuleRequest = new global::Rules1.DeleteRuleRequest();
            }
            input.ReadMessage(DeleteRuleRequest);
            break;
          }
          case 34: {
            if (rulesListRequest_ == null) {
              RulesListRequest = new global::Rules1.RulesListRequest();
            }
            input.ReadMessage(RulesListRequest);
            break;
          }
          case 42: {
            if (notificationHistoryRequest_ == null) {
              NotificationHistoryRequest = new global::Rules1.NotificationHistoryRequest();
            }
            input.ReadMessage(NotificationHistoryRequest);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            if (setRuleRequest_ == null) {
              SetRuleRequest = new global::Rules1.SetRuleRequest();
            }
            input.ReadMessage(SetRuleRequest);
            break;
          }
          case 26: {
            if (deleteRuleRequest_ == null) {
              DeleteRuleRequest = new global::Rules1.DeleteRuleRequest();
            }
            input.ReadMessage(DeleteRuleRequest);
            break;
          }
          case 34: {
            if (rulesListRequest_ == null) {
              RulesListRequest = new global::Rules1.RulesListRequest();
            }
            input.ReadMessage(RulesListRequest);
            break;
          }
          case 42: {
            if (notificationHistoryRequest_ == null) {
              NotificationHistoryRequest = new global::Rules1.NotificationHistoryRequest();
            }
            input.ReadMessage(NotificationHistoryRequest);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Server rule messages.
  /// </summary>
  public sealed partial class RuleResult : pb::IMessage<RuleResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuleResult> _parser = new pb::MessageParser<RuleResult>(() => new RuleResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleResult(RuleResult other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      details_ = other.details_ != null ? other.details_.Clone() : null;
      setRuleResult_ = other.setRuleResult_ != null ? other.setRuleResult_.Clone() : null;
      deleteRuleResult_ = other.deleteRuleResult_ != null ? other.deleteRuleResult_.Clone() : null;
      rulesListResult_ = other.rulesListResult_ != null ? other.rulesListResult_.Clone() : null;
      notificationHistoryResult_ = other.notificationHistoryResult_ != null ? other.notificationHistoryResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleResult Clone() {
      return new RuleResult(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static string RequestIdDefaultValue = "";

    private string requestId_;
    /// <summary>
    /// ID of a corresponding request or subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_ ?? RequestIdDefaultValue; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return requestId_ != null; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      requestId_ = null;
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// Operation status.
    /// This field is associated with ResultCode enum.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private global::Shared1.Text details_;
    /// <summary>
    /// Operation details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Shared1.Text Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "set_rule_result" field.</summary>
    public const int SetRuleResultFieldNumber = 4;
    private global::Rules1.SetRuleResult setRuleResult_;
    /// <summary>
    /// Result of set rule operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.SetRuleResult SetRuleResult {
      get { return setRuleResult_; }
      set {
        setRuleResult_ = value;
      }
    }

    /// <summary>Field number for the "delete_rule_result" field.</summary>
    public const int DeleteRuleResultFieldNumber = 5;
    private global::Rules1.DeleteRuleResult deleteRuleResult_;
    /// <summary>
    /// Result of delete rule operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.DeleteRuleResult DeleteRuleResult {
      get { return deleteRuleResult_; }
      set {
        deleteRuleResult_ = value;
      }
    }

    /// <summary>Field number for the "rules_list_result" field.</summary>
    public const int RulesListResultFieldNumber = 6;
    private global::Rules1.RulesListResult rulesListResult_;
    /// <summary>
    /// Result of rules list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.RulesListResult RulesListResult {
      get { return rulesListResult_; }
      set {
        rulesListResult_ = value;
      }
    }

    /// <summary>Field number for the "notification_history_result" field.</summary>
    public const int NotificationHistoryResultFieldNumber = 7;
    private global::Rules1.NotificationHistoryResult notificationHistoryResult_;
    /// <summary>
    /// Result of notification history request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.NotificationHistoryResult NotificationHistoryResult {
      get { return notificationHistoryResult_; }
      set {
        notificationHistoryResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (!object.Equals(SetRuleResult, other.SetRuleResult)) return false;
      if (!object.Equals(DeleteRuleResult, other.DeleteRuleResult)) return false;
      if (!object.Equals(RulesListResult, other.RulesListResult)) return false;
      if (!object.Equals(NotificationHistoryResult, other.NotificationHistoryResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (setRuleResult_ != null) hash ^= SetRuleResult.GetHashCode();
      if (deleteRuleResult_ != null) hash ^= DeleteRuleResult.GetHashCode();
      if (rulesListResult_ != null) hash ^= RulesListResult.GetHashCode();
      if (notificationHistoryResult_ != null) hash ^= NotificationHistoryResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (setRuleResult_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SetRuleResult);
      }
      if (deleteRuleResult_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeleteRuleResult);
      }
      if (rulesListResult_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RulesListResult);
      }
      if (notificationHistoryResult_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NotificationHistoryResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (setRuleResult_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SetRuleResult);
      }
      if (deleteRuleResult_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeleteRuleResult);
      }
      if (rulesListResult_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RulesListResult);
      }
      if (notificationHistoryResult_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NotificationHistoryResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (setRuleResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetRuleResult);
      }
      if (deleteRuleResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteRuleResult);
      }
      if (rulesListResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RulesListResult);
      }
      if (notificationHistoryResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationHistoryResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleResult other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Shared1.Text();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.setRuleResult_ != null) {
        if (setRuleResult_ == null) {
          SetRuleResult = new global::Rules1.SetRuleResult();
        }
        SetRuleResult.MergeFrom(other.SetRuleResult);
      }
      if (other.deleteRuleResult_ != null) {
        if (deleteRuleResult_ == null) {
          DeleteRuleResult = new global::Rules1.DeleteRuleResult();
        }
        DeleteRuleResult.MergeFrom(other.DeleteRuleResult);
      }
      if (other.rulesListResult_ != null) {
        if (rulesListResult_ == null) {
          RulesListResult = new global::Rules1.RulesListResult();
        }
        RulesListResult.MergeFrom(other.RulesListResult);
      }
      if (other.notificationHistoryResult_ != null) {
        if (notificationHistoryResult_ == null) {
          NotificationHistoryResult = new global::Rules1.NotificationHistoryResult();
        }
        NotificationHistoryResult.MergeFrom(other.NotificationHistoryResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Shared1.Text();
            }
            input.ReadMessage(Details);
            break;
          }
          case 34: {
            if (setRuleResult_ == null) {
              SetRuleResult = new global::Rules1.SetRuleResult();
            }
            input.ReadMessage(SetRuleResult);
            break;
          }
          case 42: {
            if (deleteRuleResult_ == null) {
              DeleteRuleResult = new global::Rules1.DeleteRuleResult();
            }
            input.ReadMessage(DeleteRuleResult);
            break;
          }
          case 50: {
            if (rulesListResult_ == null) {
              RulesListResult = new global::Rules1.RulesListResult();
            }
            input.ReadMessage(RulesListResult);
            break;
          }
          case 58: {
            if (notificationHistoryResult_ == null) {
              NotificationHistoryResult = new global::Rules1.NotificationHistoryResult();
            }
            input.ReadMessage(NotificationHistoryResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Shared1.Text();
            }
            input.ReadMessage(Details);
            break;
          }
          case 34: {
            if (setRuleResult_ == null) {
              SetRuleResult = new global::Rules1.SetRuleResult();
            }
            input.ReadMessage(SetRuleResult);
            break;
          }
          case 42: {
            if (deleteRuleResult_ == null) {
              DeleteRuleResult = new global::Rules1.DeleteRuleResult();
            }
            input.ReadMessage(DeleteRuleResult);
            break;
          }
          case 50: {
            if (rulesListResult_ == null) {
              RulesListResult = new global::Rules1.RulesListResult();
            }
            input.ReadMessage(RulesListResult);
            break;
          }
          case 58: {
            if (notificationHistoryResult_ == null) {
              NotificationHistoryResult = new global::Rules1.NotificationHistoryResult();
            }
            input.ReadMessage(NotificationHistoryResult);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RuleResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResultCode {
        /// <summary>
        //// success codes (0 - 100)
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 0,
        /// <summary>
        ///// failure codes (100+)
        /// General failure.
        /// </summary>
        [pbr::OriginalName("FAILURE")] Failure = 101,
      }

    }
    #endregion

  }

  /// <summary>
  /// Rule definition contains one of the specific rules.
  /// Only one specific rule can be specified.
  /// </summary>
  public sealed partial class RuleDefinition : pb::IMessage<RuleDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuleDefinition> _parser = new pb::MessageParser<RuleDefinition>(() => new RuleDefinition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleDefinition(RuleDefinition other) : this() {
      _hasBits0 = other._hasBits0;
      ruleId_ = other.ruleId_;
      ruleTag_ = other.ruleTag_.Clone();
      expirationUtcTimestamp_ = other.expirationUtcTimestamp_ != null ? other.expirationUtcTimestamp_.Clone() : null;
      action_ = other.action_.Clone();
      orderEventRule_ = other.orderEventRule_ != null ? other.orderEventRule_.Clone() : null;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleDefinition Clone() {
      return new RuleDefinition(this);
    }

    /// <summary>Field number for the "rule_id" field.</summary>
    public const int RuleIdFieldNumber = 1;
    private readonly static string RuleIdDefaultValue = "";

    private string ruleId_;
    /// <summary>
    /// Client ID of the rule. 
    /// It has to be unique for this client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RuleId {
      get { return ruleId_ ?? RuleIdDefaultValue; }
      set {
        ruleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rule_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRuleId {
      get { return ruleId_ != null; }
    }
    /// <summary>Clears the value of the "rule_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRuleId() {
      ruleId_ = null;
    }

    /// <summary>Field number for the "rule_tag" field.</summary>
    public const int RuleTagFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ruleTag_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ruleTag_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of optional client rule tags, the value is ignored.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RuleTag {
      get { return ruleTag_; }
    }

    /// <summary>Field number for the "expiration_utc_timestamp" field.</summary>
    public const int ExpirationUtcTimestampFieldNumber = 3;
    private global::Google.Protobuf.Timestamp expirationUtcTimestamp_;
    /// <summary>
    /// Rule expiration time, the value is ignored.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp ExpirationUtcTimestamp {
      get { return expirationUtcTimestamp_; }
      set {
        expirationUtcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Rules1.Action> _repeated_action_codec
        = pb::FieldCodec.ForMessage(34, global::Rules1.Action.Parser);
    private readonly pbc::RepeatedField<global::Rules1.Action> action_ = new pbc::RepeatedField<global::Rules1.Action>();
    /// <summary>
    /// List of actions for rule execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rules1.Action> Action {
      get { return action_; }
    }

    /// <summary>Field number for the "order_event_rule" field.</summary>
    public const int OrderEventRuleFieldNumber = 5;
    private global::Rules1.OrderEventRule orderEventRule_;
    /// <summary>
    /// Order event rule definition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.OrderEventRule OrderEventRule {
      get { return orderEventRule_; }
      set {
        orderEventRule_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 6;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    /// <summary>
    /// True means the rule is in execution.
    /// To enable or disable the rule the client updates the rule
    /// with a corresponding values of this flag.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RuleId != other.RuleId) return false;
      if(!ruleTag_.Equals(other.ruleTag_)) return false;
      if (!object.Equals(ExpirationUtcTimestamp, other.ExpirationUtcTimestamp)) return false;
      if(!action_.Equals(other.action_)) return false;
      if (!object.Equals(OrderEventRule, other.OrderEventRule)) return false;
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRuleId) hash ^= RuleId.GetHashCode();
      hash ^= ruleTag_.GetHashCode();
      if (expirationUtcTimestamp_ != null) hash ^= ExpirationUtcTimestamp.GetHashCode();
      hash ^= action_.GetHashCode();
      if (orderEventRule_ != null) hash ^= OrderEventRule.GetHashCode();
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRuleId) {
        output.WriteRawTag(10);
        output.WriteString(RuleId);
      }
      ruleTag_.WriteTo(output, _repeated_ruleTag_codec);
      if (expirationUtcTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirationUtcTimestamp);
      }
      action_.WriteTo(output, _repeated_action_codec);
      if (orderEventRule_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OrderEventRule);
      }
      if (HasEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRuleId) {
        output.WriteRawTag(10);
        output.WriteString(RuleId);
      }
      ruleTag_.WriteTo(ref output, _repeated_ruleTag_codec);
      if (expirationUtcTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirationUtcTimestamp);
      }
      action_.WriteTo(ref output, _repeated_action_codec);
      if (orderEventRule_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OrderEventRule);
      }
      if (HasEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRuleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RuleId);
      }
      size += ruleTag_.CalculateSize(_repeated_ruleTag_codec);
      if (expirationUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationUtcTimestamp);
      }
      size += action_.CalculateSize(_repeated_action_codec);
      if (orderEventRule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderEventRule);
      }
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleDefinition other) {
      if (other == null) {
        return;
      }
      if (other.HasRuleId) {
        RuleId = other.RuleId;
      }
      ruleTag_.Add(other.ruleTag_);
      if (other.expirationUtcTimestamp_ != null) {
        if (expirationUtcTimestamp_ == null) {
          ExpirationUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        ExpirationUtcTimestamp.MergeFrom(other.ExpirationUtcTimestamp);
      }
      action_.Add(other.action_);
      if (other.orderEventRule_ != null) {
        if (orderEventRule_ == null) {
          OrderEventRule = new global::Rules1.OrderEventRule();
        }
        OrderEventRule.MergeFrom(other.OrderEventRule);
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RuleId = input.ReadString();
            break;
          }
          case 18: {
            ruleTag_.AddEntriesFrom(input, _repeated_ruleTag_codec);
            break;
          }
          case 26: {
            if (expirationUtcTimestamp_ == null) {
              ExpirationUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(ExpirationUtcTimestamp);
            break;
          }
          case 34: {
            action_.AddEntriesFrom(input, _repeated_action_codec);
            break;
          }
          case 42: {
            if (orderEventRule_ == null) {
              OrderEventRule = new global::Rules1.OrderEventRule();
            }
            input.ReadMessage(OrderEventRule);
            break;
          }
          case 48: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RuleId = input.ReadString();
            break;
          }
          case 18: {
            ruleTag_.AddEntriesFrom(ref input, _repeated_ruleTag_codec);
            break;
          }
          case 26: {
            if (expirationUtcTimestamp_ == null) {
              ExpirationUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(ExpirationUtcTimestamp);
            break;
          }
          case 34: {
            action_.AddEntriesFrom(ref input, _repeated_action_codec);
            break;
          }
          case 42: {
            if (orderEventRule_ == null) {
              OrderEventRule = new global::Rules1.OrderEventRule();
            }
            input.ReadMessage(OrderEventRule);
            break;
          }
          case 48: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Possible actions for rule execution.
  /// Only notifications are supported at the moment.
  /// </summary>
  public sealed partial class Action : pb::IMessage<Action>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Action> _parser = new pb::MessageParser<Action>(() => new Action());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Action> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action(Action other) : this() {
      destination_ = other.destination_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action Clone() {
      return new Action(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Shared1.Destination> _repeated_destination_codec
        = pb::FieldCodec.ForMessage(34, global::Shared1.Destination.Parser);
    private readonly pbc::RepeatedField<global::Shared1.Destination> destination_ = new pbc::RepeatedField<global::Shared1.Destination>();
    /// <summary>
    /// List of destinations to notify.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Shared1.Destination> Destination {
      get { return destination_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Action);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Action other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!destination_.Equals(other.destination_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= destination_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      destination_.WriteTo(output, _repeated_destination_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      destination_.WriteTo(ref output, _repeated_destination_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += destination_.CalculateSize(_repeated_destination_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Action other) {
      if (other == null) {
        return;
      }
      destination_.Add(other.destination_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            destination_.AddEntriesFrom(input, _repeated_destination_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34: {
            destination_.AddEntriesFrom(ref input, _repeated_destination_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Order event notification rule.
  /// Use it to get notifications for order events.
  /// </summary>
  public sealed partial class OrderEventRule : pb::IMessage<OrderEventRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderEventRule> _parser = new pb::MessageParser<OrderEventRule>(() => new OrderEventRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderEventRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderEventRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderEventRule(OrderEventRule other) : this() {
      accountId_ = other.accountId_.Clone();
      orderStatus_ = other.orderStatus_.Clone();
      transactionStatus_ = other.transactionStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderEventRule Clone() {
      return new OrderEventRule(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_accountId_codec
        = pb::FieldCodec.ForSInt32(8);
    private readonly pbc::RepeatedField<int> accountId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Optional list of accounts.
    /// All accounts of the client if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AccountId {
      get { return accountId_; }
    }

    /// <summary>Field number for the "order_status" field.</summary>
    public const int OrderStatusFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_orderStatus_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> orderStatus_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// Optional list of order statuses that server will notify about.
    /// The server will notify about all order statuses if not specified.
    /// Associated with shared_1.OrderStatus.Status enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> OrderStatus {
      get { return orderStatus_; }
    }

    /// <summary>Field number for the "transaction_status" field.</summary>
    public const int TransactionStatusFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_transactionStatus_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> transactionStatus_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// Optional list of transaction statuses that server will notify about.
    /// The server will notify about all transaction statuses if not specified.
    /// Note: if it's specified along with order_status field only notifications matching both filters will be sent.
    /// Associated with shared_1.TransactionStatus.Status enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> TransactionStatus {
      get { return transactionStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderEventRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderEventRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accountId_.Equals(other.accountId_)) return false;
      if(!orderStatus_.Equals(other.orderStatus_)) return false;
      if(!transactionStatus_.Equals(other.transactionStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accountId_.GetHashCode();
      hash ^= orderStatus_.GetHashCode();
      hash ^= transactionStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      accountId_.WriteTo(output, _repeated_accountId_codec);
      orderStatus_.WriteTo(output, _repeated_orderStatus_codec);
      transactionStatus_.WriteTo(output, _repeated_transactionStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      accountId_.WriteTo(ref output, _repeated_accountId_codec);
      orderStatus_.WriteTo(ref output, _repeated_orderStatus_codec);
      transactionStatus_.WriteTo(ref output, _repeated_transactionStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += accountId_.CalculateSize(_repeated_accountId_codec);
      size += orderStatus_.CalculateSize(_repeated_orderStatus_codec);
      size += transactionStatus_.CalculateSize(_repeated_transactionStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderEventRule other) {
      if (other == null) {
        return;
      }
      accountId_.Add(other.accountId_);
      orderStatus_.Add(other.orderStatus_);
      transactionStatus_.Add(other.transactionStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            accountId_.AddEntriesFrom(input, _repeated_accountId_codec);
            break;
          }
          case 18:
          case 16: {
            orderStatus_.AddEntriesFrom(input, _repeated_orderStatus_codec);
            break;
          }
          case 26:
          case 24: {
            transactionStatus_.AddEntriesFrom(input, _repeated_transactionStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            accountId_.AddEntriesFrom(ref input, _repeated_accountId_codec);
            break;
          }
          case 18:
          case 16: {
            orderStatus_.AddEntriesFrom(ref input, _repeated_orderStatus_codec);
            break;
          }
          case 26:
          case 24: {
            transactionStatus_.AddEntriesFrom(ref input, _repeated_transactionStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Notification by a history request.
  /// </summary>
  public sealed partial class NotificationReport : pb::IMessage<NotificationReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationReport> _parser = new pb::MessageParser<NotificationReport>(() => new NotificationReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationReport(NotificationReport other) : this() {
      title_ = other.title_ != null ? other.title_.Clone() : null;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      ruleId_ = other.ruleId_;
      notificationProperty_ = other.notificationProperty_.Clone();
      whenUtcTimestamp_ = other.whenUtcTimestamp_ != null ? other.whenUtcTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationReport Clone() {
      return new NotificationReport(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private global::Shared1.Text title_;
    /// <summary>
    /// Notification title.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Shared1.Text Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::Shared1.Text body_;
    /// <summary>
    /// Notification body.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Shared1.Text Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "rule_id" field.</summary>
    public const int RuleIdFieldNumber = 3;
    private readonly static string RuleIdDefaultValue = "";

    private string ruleId_;
    /// <summary>
    /// Rule ID that triggered corresponding action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RuleId {
      get { return ruleId_ ?? RuleIdDefaultValue; }
      set {
        ruleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rule_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRuleId {
      get { return ruleId_ != null; }
    }
    /// <summary>Clears the value of the "rule_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRuleId() {
      ruleId_ = null;
    }

    /// <summary>Field number for the "notification_property" field.</summary>
    public const int NotificationPropertyFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Shared1.NotificationProperty> _repeated_notificationProperty_codec
        = pb::FieldCodec.ForMessage(34, global::Shared1.NotificationProperty.Parser);
    private readonly pbc::RepeatedField<global::Shared1.NotificationProperty> notificationProperty_ = new pbc::RepeatedField<global::Shared1.NotificationProperty>();
    /// <summary>
    /// Optional notification specific information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Shared1.NotificationProperty> NotificationProperty {
      get { return notificationProperty_; }
    }

    /// <summary>Field number for the "when_utc_timestamp" field.</summary>
    public const int WhenUtcTimestampFieldNumber = 5;
    private global::Google.Protobuf.Timestamp whenUtcTimestamp_;
    /// <summary>
    /// Time when the notification was triggered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp WhenUtcTimestamp {
      get { return whenUtcTimestamp_; }
      set {
        whenUtcTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Title, other.Title)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      if (RuleId != other.RuleId) return false;
      if(!notificationProperty_.Equals(other.notificationProperty_)) return false;
      if (!object.Equals(WhenUtcTimestamp, other.WhenUtcTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (title_ != null) hash ^= Title.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (HasRuleId) hash ^= RuleId.GetHashCode();
      hash ^= notificationProperty_.GetHashCode();
      if (whenUtcTimestamp_ != null) hash ^= WhenUtcTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (title_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Title);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (HasRuleId) {
        output.WriteRawTag(26);
        output.WriteString(RuleId);
      }
      notificationProperty_.WriteTo(output, _repeated_notificationProperty_codec);
      if (whenUtcTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(WhenUtcTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (title_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Title);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (HasRuleId) {
        output.WriteRawTag(26);
        output.WriteString(RuleId);
      }
      notificationProperty_.WriteTo(ref output, _repeated_notificationProperty_codec);
      if (whenUtcTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(WhenUtcTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (HasRuleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RuleId);
      }
      size += notificationProperty_.CalculateSize(_repeated_notificationProperty_codec);
      if (whenUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WhenUtcTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationReport other) {
      if (other == null) {
        return;
      }
      if (other.title_ != null) {
        if (title_ == null) {
          Title = new global::Shared1.Text();
        }
        Title.MergeFrom(other.Title);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Shared1.Text();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.HasRuleId) {
        RuleId = other.RuleId;
      }
      notificationProperty_.Add(other.notificationProperty_);
      if (other.whenUtcTimestamp_ != null) {
        if (whenUtcTimestamp_ == null) {
          WhenUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        WhenUtcTimestamp.MergeFrom(other.WhenUtcTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (title_ == null) {
              Title = new global::Shared1.Text();
            }
            input.ReadMessage(Title);
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Shared1.Text();
            }
            input.ReadMessage(Body);
            break;
          }
          case 26: {
            RuleId = input.ReadString();
            break;
          }
          case 34: {
            notificationProperty_.AddEntriesFrom(input, _repeated_notificationProperty_codec);
            break;
          }
          case 42: {
            if (whenUtcTimestamp_ == null) {
              WhenUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(WhenUtcTimestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (title_ == null) {
              Title = new global::Shared1.Text();
            }
            input.ReadMessage(Title);
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::Shared1.Text();
            }
            input.ReadMessage(Body);
            break;
          }
          case 26: {
            RuleId = input.ReadString();
            break;
          }
          case 34: {
            notificationProperty_.AddEntriesFrom(ref input, _repeated_notificationProperty_codec);
            break;
          }
          case 42: {
            if (whenUtcTimestamp_ == null) {
              WhenUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(WhenUtcTimestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Create or update a rule.
  /// </summary>
  public sealed partial class SetRuleRequest : pb::IMessage<SetRuleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetRuleRequest> _parser = new pb::MessageParser<SetRuleRequest>(() => new SetRuleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRuleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRuleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRuleRequest(SetRuleRequest other) : this() {
      ruleDefinition_ = other.ruleDefinition_ != null ? other.ruleDefinition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRuleRequest Clone() {
      return new SetRuleRequest(this);
    }

    /// <summary>Field number for the "rule_definition" field.</summary>
    public const int RuleDefinitionFieldNumber = 1;
    private global::Rules1.RuleDefinition ruleDefinition_;
    /// <summary>
    /// Definition of the rule.
    /// The complete definition is expected 
    /// regardless if these are new rules of updates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Rules1.RuleDefinition RuleDefinition {
      get { return ruleDefinition_; }
      set {
        ruleDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRuleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRuleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RuleDefinition, other.RuleDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ruleDefinition_ != null) hash ^= RuleDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ruleDefinition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RuleDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ruleDefinition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RuleDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ruleDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RuleDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRuleRequest other) {
      if (other == null) {
        return;
      }
      if (other.ruleDefinition_ != null) {
        if (ruleDefinition_ == null) {
          RuleDefinition = new global::Rules1.RuleDefinition();
        }
        RuleDefinition.MergeFrom(other.RuleDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ruleDefinition_ == null) {
              RuleDefinition = new global::Rules1.RuleDefinition();
            }
            input.ReadMessage(RuleDefinition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ruleDefinition_ == null) {
              RuleDefinition = new global::Rules1.RuleDefinition();
            }
            input.ReadMessage(RuleDefinition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of set rule operation.
  /// </summary>
  public sealed partial class SetRuleResult : pb::IMessage<SetRuleResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetRuleResult> _parser = new pb::MessageParser<SetRuleResult>(() => new SetRuleResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRuleResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRuleResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRuleResult(SetRuleResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRuleResult Clone() {
      return new SetRuleResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRuleResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRuleResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRuleResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Delete a rule.
  /// </summary>
  public sealed partial class DeleteRuleRequest : pb::IMessage<DeleteRuleRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteRuleRequest> _parser = new pb::MessageParser<DeleteRuleRequest>(() => new DeleteRuleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRuleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRuleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRuleRequest(DeleteRuleRequest other) : this() {
      ruleId_ = other.ruleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRuleRequest Clone() {
      return new DeleteRuleRequest(this);
    }

    /// <summary>Field number for the "rule_id" field.</summary>
    public const int RuleIdFieldNumber = 1;
    private readonly static string RuleIdDefaultValue = "";

    private string ruleId_;
    /// <summary>
    /// Rule to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RuleId {
      get { return ruleId_ ?? RuleIdDefaultValue; }
      set {
        ruleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rule_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRuleId {
      get { return ruleId_ != null; }
    }
    /// <summary>Clears the value of the "rule_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRuleId() {
      ruleId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRuleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRuleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RuleId != other.RuleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRuleId) hash ^= RuleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRuleId) {
        output.WriteRawTag(10);
        output.WriteString(RuleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRuleId) {
        output.WriteRawTag(10);
        output.WriteString(RuleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRuleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RuleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRuleRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRuleId) {
        RuleId = other.RuleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RuleId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RuleId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of delete rule operation.
  /// </summary>
  public sealed partial class DeleteRuleResult : pb::IMessage<DeleteRuleResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteRuleResult> _parser = new pb::MessageParser<DeleteRuleResult>(() => new DeleteRuleResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRuleResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRuleResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRuleResult(DeleteRuleResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRuleResult Clone() {
      return new DeleteRuleResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRuleResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRuleResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRuleResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get a list of rules.
  /// </summary>
  public sealed partial class RulesListRequest : pb::IMessage<RulesListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RulesListRequest> _parser = new pb::MessageParser<RulesListRequest>(() => new RulesListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RulesListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesListRequest(RulesListRequest other) : this() {
      ruleTag_ = other.ruleTag_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesListRequest Clone() {
      return new RulesListRequest(this);
    }

    /// <summary>Field number for the "rule_tag" field.</summary>
    public const int RuleTagFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ruleTag_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ruleTag_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional filter with a list of tags, the value is ignored.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RuleTag {
      get { return ruleTag_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RulesListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RulesListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ruleTag_.Equals(other.ruleTag_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ruleTag_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ruleTag_.WriteTo(output, _repeated_ruleTag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ruleTag_.WriteTo(ref output, _repeated_ruleTag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ruleTag_.CalculateSize(_repeated_ruleTag_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RulesListRequest other) {
      if (other == null) {
        return;
      }
      ruleTag_.Add(other.ruleTag_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ruleTag_.AddEntriesFrom(input, _repeated_ruleTag_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ruleTag_.AddEntriesFrom(ref input, _repeated_ruleTag_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of rules list request.
  /// </summary>
  public sealed partial class RulesListResult : pb::IMessage<RulesListResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RulesListResult> _parser = new pb::MessageParser<RulesListResult>(() => new RulesListResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RulesListResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesListResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesListResult(RulesListResult other) : this() {
      ruleDefinition_ = other.ruleDefinition_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesListResult Clone() {
      return new RulesListResult(this);
    }

    /// <summary>Field number for the "rule_definition" field.</summary>
    public const int RuleDefinitionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rules1.RuleDefinition> _repeated_ruleDefinition_codec
        = pb::FieldCodec.ForMessage(10, global::Rules1.RuleDefinition.Parser);
    private readonly pbc::RepeatedField<global::Rules1.RuleDefinition> ruleDefinition_ = new pbc::RepeatedField<global::Rules1.RuleDefinition>();
    /// <summary>
    /// List of found rules.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rules1.RuleDefinition> RuleDefinition {
      get { return ruleDefinition_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RulesListResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RulesListResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ruleDefinition_.Equals(other.ruleDefinition_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ruleDefinition_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ruleDefinition_.WriteTo(output, _repeated_ruleDefinition_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ruleDefinition_.WriteTo(ref output, _repeated_ruleDefinition_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ruleDefinition_.CalculateSize(_repeated_ruleDefinition_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RulesListResult other) {
      if (other == null) {
        return;
      }
      ruleDefinition_.Add(other.ruleDefinition_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ruleDefinition_.AddEntriesFrom(input, _repeated_ruleDefinition_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ruleDefinition_.AddEntriesFrom(ref input, _repeated_ruleDefinition_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for notifications history.
  /// The history is limited to 30 last days.
  /// </summary>
  public sealed partial class NotificationHistoryRequest : pb::IMessage<NotificationHistoryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationHistoryRequest> _parser = new pb::MessageParser<NotificationHistoryRequest>(() => new NotificationHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationHistoryRequest(NotificationHistoryRequest other) : this() {
      fromUtcTimestamp_ = other.fromUtcTimestamp_ != null ? other.fromUtcTimestamp_.Clone() : null;
      toUtcTimestamp_ = other.toUtcTimestamp_ != null ? other.toUtcTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationHistoryRequest Clone() {
      return new NotificationHistoryRequest(this);
    }

    /// <summary>Field number for the "from_utc_timestamp" field.</summary>
    public const int FromUtcTimestampFieldNumber = 1;
    private global::Google.Protobuf.Timestamp fromUtcTimestamp_;
    /// <summary>
    /// Start point for the history request, inclusive.
    /// Maximum allowed history is returned if omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp FromUtcTimestamp {
      get { return fromUtcTimestamp_; }
      set {
        fromUtcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "to_utc_timestamp" field.</summary>
    public const int ToUtcTimestampFieldNumber = 2;
    private global::Google.Protobuf.Timestamp toUtcTimestamp_;
    /// <summary>
    /// Stop point for the history request, inclusive.
    /// History up till now is returned if omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp ToUtcTimestamp {
      get { return toUtcTimestamp_; }
      set {
        toUtcTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromUtcTimestamp, other.FromUtcTimestamp)) return false;
      if (!object.Equals(ToUtcTimestamp, other.ToUtcTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromUtcTimestamp_ != null) hash ^= FromUtcTimestamp.GetHashCode();
      if (toUtcTimestamp_ != null) hash ^= ToUtcTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fromUtcTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromUtcTimestamp);
      }
      if (toUtcTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ToUtcTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fromUtcTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromUtcTimestamp);
      }
      if (toUtcTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ToUtcTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUtcTimestamp);
      }
      if (toUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToUtcTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.fromUtcTimestamp_ != null) {
        if (fromUtcTimestamp_ == null) {
          FromUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        FromUtcTimestamp.MergeFrom(other.FromUtcTimestamp);
      }
      if (other.toUtcTimestamp_ != null) {
        if (toUtcTimestamp_ == null) {
          ToUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        ToUtcTimestamp.MergeFrom(other.ToUtcTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromUtcTimestamp_ == null) {
              FromUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(FromUtcTimestamp);
            break;
          }
          case 18: {
            if (toUtcTimestamp_ == null) {
              ToUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(ToUtcTimestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fromUtcTimestamp_ == null) {
              FromUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(FromUtcTimestamp);
            break;
          }
          case 18: {
            if (toUtcTimestamp_ == null) {
              ToUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(ToUtcTimestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of notification history request.
  /// </summary>
  public sealed partial class NotificationHistoryResult : pb::IMessage<NotificationHistoryResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationHistoryResult> _parser = new pb::MessageParser<NotificationHistoryResult>(() => new NotificationHistoryResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationHistoryResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rules1.Rules1Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationHistoryResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationHistoryResult(NotificationHistoryResult other) : this() {
      notificationReport_ = other.notificationReport_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationHistoryResult Clone() {
      return new NotificationHistoryResult(this);
    }

    /// <summary>Field number for the "notification_report" field.</summary>
    public const int NotificationReportFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rules1.NotificationReport> _repeated_notificationReport_codec
        = pb::FieldCodec.ForMessage(10, global::Rules1.NotificationReport.Parser);
    private readonly pbc::RepeatedField<global::Rules1.NotificationReport> notificationReport_ = new pbc::RepeatedField<global::Rules1.NotificationReport>();
    /// <summary>
    /// List of notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Rules1.NotificationReport> NotificationReport {
      get { return notificationReport_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationHistoryResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationHistoryResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notificationReport_.Equals(other.notificationReport_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notificationReport_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      notificationReport_.WriteTo(output, _repeated_notificationReport_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      notificationReport_.WriteTo(ref output, _repeated_notificationReport_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notificationReport_.CalculateSize(_repeated_notificationReport_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationHistoryResult other) {
      if (other == null) {
        return;
      }
      notificationReport_.Add(other.notificationReport_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notificationReport_.AddEntriesFrom(input, _repeated_notificationReport_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            notificationReport_.AddEntriesFrom(ref input, _repeated_notificationReport_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
