// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebAPI/user_attribute_2.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UserAttribute2 {

  /// <summary>Holder for reflection information generated from WebAPI/user_attribute_2.proto</summary>
  public static partial class UserAttribute2Reflection {

    #region Descriptor
    /// <summary>File descriptor for WebAPI/user_attribute_2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserAttribute2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1XZWJBUEkvdXNlcl9hdHRyaWJ1dGVfMi5wcm90bxIQdXNlcl9hdHRyaWJ1",
            "dGVfMiI9Cg1Vc2VyQXR0cmlidXRlEgwKBG5hbWUYASACKAkSDQoFdmFsdWUY",
            "AiABKAkSDwoHZGVsZXRlZBgDIAEoCCKQAQoUTW9kaWZ5VXNlckF0dHJpYnV0",
            "ZXMSFgoOY2hhaW5fb3JkZXJfaWQYASACKAkSEgoKYWNjb3VudF9pZBgCIAIo",
            "ERI4Cg91c2VyX2F0dHJpYnV0ZXMYAyADKAsyHy51c2VyX2F0dHJpYnV0ZV8y",
            "LlVzZXJBdHRyaWJ1dGUSEgoKaXNfY2hlY2tlZBgEIAEoCCJHChhSZWFkVXNl",
            "ckF0dHJpYnV0ZVJlcXVlc3QSEgoKcmVxdWVzdF9pZBgBIAIoDRIXCg9hdHRy",
            "aWJ1dGVfbmFtZXMYAiADKAkigAIKF1JlYWRVc2VyQXR0cmlidXRlUmVzdWx0",
            "EhIKCnJlcXVlc3RfaWQYASACKA0SEwoLcmVzdWx0X2NvZGUYAiACKA0SOAoP",
            "dXNlcl9hdHRyaWJ1dGVzGAMgAygLMh8udXNlcl9hdHRyaWJ1dGVfMi5Vc2Vy",
            "QXR0cmlidXRlEhQKDHRleHRfbWVzc2FnZRgEIAEoCSJsCgpSZXN1bHRDb2Rl",
            "EhcKE1JFU1VMVF9DT0RFX1NVQ0NFU1MQABIXChNSRVNVTFRfQ09ERV9GQUlM",
            "VVJFEGUSLAooUkVTVUxUX0NPREVfUkVRVUVTVF9SQVRFX0xJTUlUX1ZJT0xB",
            "VElPThBmImoKGk1vZGlmeVVzZXJBdHRyaWJ1dGVSZXF1ZXN0EhIKCnJlcXVl",
            "c3RfaWQYASACKA0SOAoPdXNlcl9hdHRyaWJ1dGVzGAIgAygLMh8udXNlcl9h",
            "dHRyaWJ1dGVfMi5Vc2VyQXR0cmlidXRlIvgBChlNb2RpZnlVc2VyQXR0cmli",
            "dXRlUmVzdWx0EhIKCnJlcXVlc3RfaWQYASACKA0SEwoLcmVzdWx0X2NvZGUY",
            "AiACKA0SFAoMdGV4dF9tZXNzYWdlGAMgASgJIpsBCgpSZXN1bHRDb2RlEhcK",
            "E1JFU1VMVF9DT0RFX1NVQ0NFU1MQABIXChNSRVNVTFRfQ09ERV9GQUlMVVJF",
            "EGUSLAooUkVTVUxUX0NPREVfUkVRVUVTVF9SQVRFX0xJTUlUX1ZJT0xBVElP",
            "ThBmEi0KKVJFU1VMVF9DT0RFX1NUT1JBR0VfU1BBQ0VfTElNSVRfVklPTEFU",
            "SU9OEGc="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UserAttribute2.UserAttribute), global::UserAttribute2.UserAttribute.Parser, new[]{ "Name", "Value", "Deleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserAttribute2.ModifyUserAttributes), global::UserAttribute2.ModifyUserAttributes.Parser, new[]{ "ChainOrderId", "AccountId", "UserAttributes", "IsChecked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserAttribute2.ReadUserAttributeRequest), global::UserAttribute2.ReadUserAttributeRequest.Parser, new[]{ "RequestId", "AttributeNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserAttribute2.ReadUserAttributeResult), global::UserAttribute2.ReadUserAttributeResult.Parser, new[]{ "RequestId", "ResultCode", "UserAttributes", "TextMessage" }, null, new[]{ typeof(global::UserAttribute2.ReadUserAttributeResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserAttribute2.ModifyUserAttributeRequest), global::UserAttribute2.ModifyUserAttributeRequest.Parser, new[]{ "RequestId", "UserAttributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserAttribute2.ModifyUserAttributeResult), global::UserAttribute2.ModifyUserAttributeResult.Parser, new[]{ "RequestId", "ResultCode", "TextMessage" }, null, new[]{ typeof(global::UserAttribute2.ModifyUserAttributeResult.Types.ResultCode) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// User defined attribute.
  /// </summary>
  public sealed partial class UserAttribute : pb::IMessage<UserAttribute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserAttribute> _parser = new pb::MessageParser<UserAttribute>(() => new UserAttribute());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserAttribute2.UserAttribute2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAttribute(UserAttribute other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      value_ = other.value_;
      deleted_ = other.deleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAttribute Clone() {
      return new UserAttribute(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Attribute name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    /// <summary>
    /// Attribute value (optional for modification if attribute is deleted).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 3;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    /// <summary>
    /// True if attribute has to be deleted during modify operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { if ((_hasBits0 & 1) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeleted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeleted() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (Deleted != other.Deleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasDeleted) {
        output.WriteRawTag(24);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (HasDeleted) {
        output.WriteRawTag(24);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserAttribute other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Modification of order's user attributes.
  /// </summary>
  public sealed partial class ModifyUserAttributes : pb::IMessage<ModifyUserAttributes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyUserAttributes> _parser = new pb::MessageParser<ModifyUserAttributes>(() => new ModifyUserAttributes());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyUserAttributes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserAttribute2.UserAttribute2Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributes(ModifyUserAttributes other) : this() {
      _hasBits0 = other._hasBits0;
      chainOrderId_ = other.chainOrderId_;
      accountId_ = other.accountId_;
      userAttributes_ = other.userAttributes_.Clone();
      isChecked_ = other.isChecked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributes Clone() {
      return new ModifyUserAttributes(this);
    }

    /// <summary>Field number for the "chain_order_id" field.</summary>
    public const int ChainOrderIdFieldNumber = 1;
    private readonly static string ChainOrderIdDefaultValue = "";

    private string chainOrderId_;
    /// <summary>
    /// ID of the order chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChainOrderId {
      get { return chainOrderId_ ?? ChainOrderIdDefaultValue; }
      set {
        chainOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "chain_order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChainOrderId {
      get { return chainOrderId_ != null; }
    }
    /// <summary>Clears the value of the "chain_order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChainOrderId() {
      chainOrderId_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private readonly static int AccountIdDefaultValue = 0;

    private int accountId_;
    /// <summary>
    /// ID of the order's account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_attributes" field.</summary>
    public const int UserAttributesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::UserAttribute2.UserAttribute> _repeated_userAttributes_codec
        = pb::FieldCodec.ForMessage(26, global::UserAttribute2.UserAttribute.Parser);
    private readonly pbc::RepeatedField<global::UserAttribute2.UserAttribute> userAttributes_ = new pbc::RepeatedField<global::UserAttribute2.UserAttribute>();
    /// <summary>
    /// List of attributes to modify.
    /// See Order.user_attribute for additional description.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserAttribute2.UserAttribute> UserAttributes {
      get { return userAttributes_; }
    }

    /// <summary>Field number for the "is_checked" field.</summary>
    public const int IsCheckedFieldNumber = 4;
    private readonly static bool IsCheckedDefaultValue = false;

    private bool isChecked_;
    /// <summary>
    /// Flag used by the client for marking the user attributes checked/unchecked.
    /// Empty means to leave the flag the same as it was.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChecked {
      get { if ((_hasBits0 & 2) != 0) { return isChecked_; } else { return IsCheckedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isChecked_ = value;
      }
    }
    /// <summary>Gets whether the "is_checked" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsChecked {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_checked" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsChecked() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyUserAttributes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyUserAttributes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainOrderId != other.ChainOrderId) return false;
      if (AccountId != other.AccountId) return false;
      if(!userAttributes_.Equals(other.userAttributes_)) return false;
      if (IsChecked != other.IsChecked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChainOrderId) hash ^= ChainOrderId.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      hash ^= userAttributes_.GetHashCode();
      if (HasIsChecked) hash ^= IsChecked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChainOrderId) {
        output.WriteRawTag(10);
        output.WriteString(ChainOrderId);
      }
      if (HasAccountId) {
        output.WriteRawTag(16);
        output.WriteSInt32(AccountId);
      }
      userAttributes_.WriteTo(output, _repeated_userAttributes_codec);
      if (HasIsChecked) {
        output.WriteRawTag(32);
        output.WriteBool(IsChecked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChainOrderId) {
        output.WriteRawTag(10);
        output.WriteString(ChainOrderId);
      }
      if (HasAccountId) {
        output.WriteRawTag(16);
        output.WriteSInt32(AccountId);
      }
      userAttributes_.WriteTo(ref output, _repeated_userAttributes_codec);
      if (HasIsChecked) {
        output.WriteRawTag(32);
        output.WriteBool(IsChecked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasChainOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainOrderId);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountId);
      }
      size += userAttributes_.CalculateSize(_repeated_userAttributes_codec);
      if (HasIsChecked) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyUserAttributes other) {
      if (other == null) {
        return;
      }
      if (other.HasChainOrderId) {
        ChainOrderId = other.ChainOrderId;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      userAttributes_.Add(other.userAttributes_);
      if (other.HasIsChecked) {
        IsChecked = other.IsChecked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChainOrderId = input.ReadString();
            break;
          }
          case 16: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 26: {
            userAttributes_.AddEntriesFrom(input, _repeated_userAttributes_codec);
            break;
          }
          case 32: {
            IsChecked = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ChainOrderId = input.ReadString();
            break;
          }
          case 16: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 26: {
            userAttributes_.AddEntriesFrom(ref input, _repeated_userAttributes_codec);
            break;
          }
          case 32: {
            IsChecked = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Read stored user attribute by name.
  /// </summary>
  public sealed partial class ReadUserAttributeRequest : pb::IMessage<ReadUserAttributeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadUserAttributeRequest> _parser = new pb::MessageParser<ReadUserAttributeRequest>(() => new ReadUserAttributeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadUserAttributeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserAttribute2.UserAttribute2Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadUserAttributeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadUserAttributeRequest(ReadUserAttributeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      attributeNames_ = other.attributeNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadUserAttributeRequest Clone() {
      return new ReadUserAttributeRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    /// <summary>
    /// ID of a request and optional subscription that should be unique enough to match responses and updates with corresponding requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "attribute_names" field.</summary>
    public const int AttributeNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_attributeNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> attributeNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of names of requested attributes or expressions to match.
    /// Empty list means requesting of all available user attributes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AttributeNames {
      get { return attributeNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadUserAttributeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadUserAttributeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if(!attributeNames_.Equals(other.attributeNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      hash ^= attributeNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      attributeNames_.WriteTo(output, _repeated_attributeNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      attributeNames_.WriteTo(ref output, _repeated_attributeNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      size += attributeNames_.CalculateSize(_repeated_attributeNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadUserAttributeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      attributeNames_.Add(other.attributeNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            attributeNames_.AddEntriesFrom(input, _repeated_attributeNames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            attributeNames_.AddEntriesFrom(ref input, _repeated_attributeNames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result with requested attributes.
  /// </summary>
  public sealed partial class ReadUserAttributeResult : pb::IMessage<ReadUserAttributeResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadUserAttributeResult> _parser = new pb::MessageParser<ReadUserAttributeResult>(() => new ReadUserAttributeResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadUserAttributeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserAttribute2.UserAttribute2Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadUserAttributeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadUserAttributeResult(ReadUserAttributeResult other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      userAttributes_ = other.userAttributes_.Clone();
      textMessage_ = other.textMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadUserAttributeResult Clone() {
      return new ReadUserAttributeResult(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    /// <summary>
    /// Corresponding request ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ResultCode {
      get { if ((_hasBits0 & 2) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResultCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResultCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "user_attributes" field.</summary>
    public const int UserAttributesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::UserAttribute2.UserAttribute> _repeated_userAttributes_codec
        = pb::FieldCodec.ForMessage(26, global::UserAttribute2.UserAttribute.Parser);
    private readonly pbc::RepeatedField<global::UserAttribute2.UserAttribute> userAttributes_ = new pbc::RepeatedField<global::UserAttribute2.UserAttribute>();
    /// <summary>
    /// List of requested attributes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserAttribute2.UserAttribute> UserAttributes {
      get { return userAttributes_; }
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 4;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional failure details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadUserAttributeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadUserAttributeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if(!userAttributes_.Equals(other.userAttributes_)) return false;
      if (TextMessage != other.TextMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      hash ^= userAttributes_.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      userAttributes_.WriteTo(output, _repeated_userAttributes_codec);
      if (HasTextMessage) {
        output.WriteRawTag(34);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      userAttributes_.WriteTo(ref output, _repeated_userAttributes_codec);
      if (HasTextMessage) {
        output.WriteRawTag(34);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      size += userAttributes_.CalculateSize(_repeated_userAttributes_codec);
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadUserAttributeResult other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      userAttributes_.Add(other.userAttributes_);
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            userAttributes_.AddEntriesFrom(input, _repeated_userAttributes_codec);
            break;
          }
          case 34: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            userAttributes_.AddEntriesFrom(ref input, _repeated_userAttributes_codec);
            break;
          }
          case 34: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReadUserAttributeResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Result code.
      /// </summary>
      public enum ResultCode {
        /// <summary>
        /// success codes
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        /// failure codes (100+)
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
        /// <summary>
        /// The request rate limit has been violated.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_REQUEST_RATE_LIMIT_VIOLATION")] RequestRateLimitViolation = 102,
      }

    }
    #endregion

  }

  /// <summary>
  /// Modify or delete user attributes.
  /// </summary>
  public sealed partial class ModifyUserAttributeRequest : pb::IMessage<ModifyUserAttributeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyUserAttributeRequest> _parser = new pb::MessageParser<ModifyUserAttributeRequest>(() => new ModifyUserAttributeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyUserAttributeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserAttribute2.UserAttribute2Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributeRequest(ModifyUserAttributeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      userAttributes_ = other.userAttributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributeRequest Clone() {
      return new ModifyUserAttributeRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    /// <summary>
    /// ID of a request that should be unique enough to match responses with corresponding requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_attributes" field.</summary>
    public const int UserAttributesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserAttribute2.UserAttribute> _repeated_userAttributes_codec
        = pb::FieldCodec.ForMessage(18, global::UserAttribute2.UserAttribute.Parser);
    private readonly pbc::RepeatedField<global::UserAttribute2.UserAttribute> userAttributes_ = new pbc::RepeatedField<global::UserAttribute2.UserAttribute>();
    /// <summary>
    /// List of attributes to modify.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::UserAttribute2.UserAttribute> UserAttributes {
      get { return userAttributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyUserAttributeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyUserAttributeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if(!userAttributes_.Equals(other.userAttributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      hash ^= userAttributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      userAttributes_.WriteTo(output, _repeated_userAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      userAttributes_.WriteTo(ref output, _repeated_userAttributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      size += userAttributes_.CalculateSize(_repeated_userAttributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyUserAttributeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      userAttributes_.Add(other.userAttributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            userAttributes_.AddEntriesFrom(input, _repeated_userAttributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            userAttributes_.AddEntriesFrom(ref input, _repeated_userAttributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// User attributes modification result.
  /// </summary>
  public sealed partial class ModifyUserAttributeResult : pb::IMessage<ModifyUserAttributeResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModifyUserAttributeResult> _parser = new pb::MessageParser<ModifyUserAttributeResult>(() => new ModifyUserAttributeResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyUserAttributeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserAttribute2.UserAttribute2Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributeResult(ModifyUserAttributeResult other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      textMessage_ = other.textMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyUserAttributeResult Clone() {
      return new ModifyUserAttributeResult(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    /// <summary>
    /// Corresponding request ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ResultCode {
      get { if ((_hasBits0 & 2) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResultCode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResultCode() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 3;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional failure details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyUserAttributeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyUserAttributeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (TextMessage != other.TextMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (HasTextMessage) {
        output.WriteRawTag(26);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (HasTextMessage) {
        output.WriteRawTag(26);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyUserAttributeResult other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ModifyUserAttributeResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Result code.
      /// </summary>
      public enum ResultCode {
        /// <summary>
        /// success codes
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        /// failure codes (100+)
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
        /// <summary>
        /// The request rate limit has been violated.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_REQUEST_RATE_LIMIT_VIOLATION")] RequestRateLimitViolation = 102,
        /// <summary>
        /// The limit of storage space has been violated.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_STORAGE_SPACE_LIMIT_VIOLATION")] StorageSpaceLimitViolation = 103,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
