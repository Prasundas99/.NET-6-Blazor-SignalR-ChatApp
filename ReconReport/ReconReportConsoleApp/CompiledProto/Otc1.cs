// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebAPI/otc_1.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Otc1 {

  /// <summary>Holder for reflection information generated from WebAPI/otc_1.proto</summary>
  public static partial class Otc1Reflection {

    #region Descriptor
    /// <summary>File descriptor for WebAPI/otc_1.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Otc1Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJXZWJBUEkvb3RjXzEucHJvdG8SBW90Y18xGhVjb21tb24vc2hhcmVkXzEu",
            "cHJvdG8aFmNvbW1vbi90aW1lc3RhbXAucHJvdG8aFGNvbW1vbi9kZWNpbWFs",
            "LnByb3RvIvwCCgpPdGNSZXF1ZXN0EhIKCnJlcXVlc3RfaWQYASABKAkSQwoa",
            "b3RjX2luc3RhbmNlc19zdWJzY3JpcHRpb24YAiABKAsyHy5vdGNfMS5PdGNJ",
            "bnN0YW5jZXNTdWJzY3JpcHRpb24SPwoYaGVkZ2VfYm9va3Nfc3Vic2NyaXB0",
            "aW9uGAMgASgLMh0ub3RjXzEuSGVkZ2VCb29rc1N1YnNjcmlwdGlvbhJMCh9o",
            "ZWRnZV9ib29rX2RldGFpbHNfc3Vic2NyaXB0aW9uGAQgASgLMiMub3RjXzEu",
            "SGVkZ2VCb29rRGV0YWlsc1N1YnNjcmlwdGlvbhJGChxvZmZzZXRfaGVkZ2Vf",
            "YmFsYW5jZV9yZXF1ZXN0GAUgASgLMiAub3RjXzEuT2Zmc2V0SGVkZ2VCYWxh",
            "bmNlUmVxdWVzdBI+ChhjaGFuZ2Vfb3RjX3N0YXRlX3JlcXVlc3QYBiABKAsy",
            "HC5vdGNfMS5DaGFuZ2VPdGNTdGF0ZVJlcXVlc3Qi3QQKCU90Y1JlcG9ydBIS",
            "CgpyZXF1ZXN0X2lkGAEgASgJEhMKC3Jlc3VsdF9jb2RlGAIgASgNEh8KB2Rl",
            "dGFpbHMYAyABKAsyDi5zaGFyZWRfMS5UZXh0EjcKFG90Y19pbnN0YW5jZXNf",
            "cmVwb3J0GAQgASgLMhkub3RjXzEuT3RjSW5zdGFuY2VzUmVwb3J0EjMKEmhl",
            "ZGdlX2Jvb2tzX3JlcG9ydBgFIAEoCzIXLm90Y18xLkhlZGdlQm9va3NSZXBv",
            "cnQSQAoZaGVkZ2VfYm9va19kZXRhaWxzX3JlcG9ydBgGIAEoCzIdLm90Y18x",
            "LkhlZGdlQm9va0RldGFpbHNSZXBvcnQSRAobb2Zmc2V0X2hlZGdlX2JhbGFu",
            "Y2VfcmVzdWx0GAcgASgLMh8ub3RjXzEuT2Zmc2V0SGVkZ2VCYWxhbmNlUmVz",
            "dWx0EjwKF2NoYW5nZV9vdGNfc3RhdGVfcmVzdWx0GAggASgLMhsub3RjXzEu",
            "Q2hhbmdlT3RjU3RhdGVSZXN1bHQi0QEKClN0YXR1c0NvZGUSCwoHU1VDQ0VT",
            "UxAAEg4KClNVQlNDUklCRUQQARILCgdEUk9QUEVEEAISCgoGVVBEQVRFEAMS",
            "EAoMRElTQ09OTkVDVEVEEAQSCwoHRkFJTFVSRRBlEhIKDklOVkFMSURfUEFS",
            "QU1TEGYSEQoNQUNDRVNTX0RFTklFRBBnEiAKHFNVQlNDUklQVElPTl9MSU1J",
            "VF9WSU9MQVRJT04QaBIlCiFTVUJTQ1JJUFRJT05fUkFURV9MSU1JVF9WSU9M",
            "QVRJT04QaSJBCg9IZWRnZUJhbGFuY2VLZXkSEgoKYWNjb3VudF9pZBgBIAEo",
            "ERITCgtjb250cmFjdF9pZBgCIAEoDSoFCGQQyAEiMwoYT3RjSW5zdGFuY2Vz",
            "U3Vic2NyaXB0aW9uEhcKCXN1YnNjcmliZRgBIAEoCDoEdHJ1ZSJJChJPdGNJ",
            "bnN0YW5jZXNSZXBvcnQSMwoSb3RjX2luc3RhbmNlX3N0YXRlGAEgAygLMhcu",
            "b3RjXzEuT3RjSW5zdGFuY2VTdGF0ZSJEChBPdGNJbnN0YW5jZVN0YXRlEhMK",
            "C2luc3RhbmNlX2lkGAEgASgNEgwKBG5hbWUYAiABKAkSDQoFc3RhdGUYAyAB",
            "KA0iSgoWSGVkZ2VCb29rc1N1YnNjcmlwdGlvbhIXCglzdWJzY3JpYmUYASAB",
            "KAg6BHRydWUSFwoPb3RjX2luc3RhbmNlX2lkGAIgASgNIngKEEhlZGdlQm9v",
            "a3NSZXBvcnQSEwoLaXNfc25hcHNob3QYASABKAgSFAoMaXNfbGFzdF9wYXJ0",
            "GAIgASgIEjkKFWhlZGdlX2JhbGFuY2VfZGV0YWlscxgDIAMoCzIaLm90Y18x",
            "LkhlZGdlQmFsYW5jZURldGFpbHMivgEKE0hlZGdlQmFsYW5jZURldGFpbHMS",
            "MQoRaGVkZ2VfYmFsYW5jZV9rZXkYASABKAsyFi5vdGNfMS5IZWRnZUJhbGFu",
            "Y2VLZXkSDwoHZGVsZXRlZBgCIAEoCBIjCg1oZWRnZV9iYWxhbmNlGAMgASgL",
            "MgwuY3FnLkRlY2ltYWwSJQoPcGVuZGluZ19iYWxhbmNlGAQgASgLMgwuY3Fn",
            "LkRlY2ltYWwSFwoPY29udHJhY3Rfc3ltYm9sGAUgASgJIrsBChxIZWRnZUJv",
            "b2tEZXRhaWxzU3Vic2NyaXB0aW9uEhcKCXN1YnNjcmliZRgBIAEoCDoEdHJ1",
            "ZRIXCg9vdGNfaW5zdGFuY2VfaWQYAiABKA0SMQoRaGVkZ2VfYmFsYW5jZV9r",
            "ZXkYAyABKAsyFi5vdGNfMS5IZWRnZUJhbGFuY2VLZXkSNgoSZnJvbV91dGNf",
            "dGltZXN0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCLw",
            "AQoWSGVkZ2VCb29rRGV0YWlsc1JlcG9ydBITCgtpc19zbmFwc2hvdBgBIAEo",
            "CBIUCgxpc19sYXN0X3BhcnQYAiABKAgSMwoSY2FzaF9vcmRlcl9kZXRhaWxz",
            "GAMgAygLMhcub3RjXzEuQ2FzaE9yZGVyRGV0YWlscxI1ChNoZWRnZV9vcmRl",
            "cl9kZXRhaWxzGAQgAygLMhgub3RjXzEuSGVkZ2VPcmRlckRldGFpbHMSPwoZ",
            "Y2FzaF90b19oZWRnZV9vcmRlcnNfbGluaxgFIAMoCzIcLm90Y18xLkNhc2hU",
            "b0hlZGdlT3JkZXJzTGluayLBAQoQQ2FzaE9yZGVyRGV0YWlscxIWCg5jaGFp",
            "bl9vcmRlcl9pZBgBIAEoCRIPCgdkZWxldGVkGAIgASgIEhIKCmFjY291bnRf",
            "aWQYAyABKBESEwoLY29udHJhY3RfaWQYBCABKA0SNwoTaGVkZ2VfdXRjX3Rp",
            "bWVzdGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGwoF",
            "dW5pdHMYBiABKAsyDC5jcWcuRGVjaW1hbCoFCGQQyAEitAEKEUhlZGdlT3Jk",
            "ZXJEZXRhaWxzEhYKDmNoYWluX29yZGVyX2lkGAEgASgJEg8KB2RlbGV0ZWQY",
            "AiABKAgSNwoTaGVkZ2VfdXRjX3RpbWVzdGFtcBgDIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASGwoFdW5pdHMYBCABKAsyDC5jcWcuRGVjaW1h",
            "bBIgCgpvcGVuX3VuaXRzGAUgASgLMgwuY3FnLkRlY2ltYWwisQEKFUNhc2hU",
            "b0hlZGdlT3JkZXJzTGluaxIPCgdkZWxldGVkGAEgASgIEjYKEmxpbmtfdXRj",
            "X3RpbWVzdGFtcBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "FQoNY2FzaF9vcmRlcl9pZBgDIAEoCRIWCg5oZWRnZV9vcmRlcl9pZBgEIAEo",
            "CRIgCgpsaW5rX3VuaXRzGAUgASgLMgwuY3FnLkRlY2ltYWwikwEKGU9mZnNl",
            "dEhlZGdlQmFsYW5jZVJlcXVlc3QSFwoPb3RjX2luc3RhbmNlX2lkGAEgASgN",
            "EjEKEWhlZGdlX2JhbGFuY2Vfa2V5GAIgASgLMhYub3RjXzEuSGVkZ2VCYWxh",
            "bmNlS2V5EioKFGhlZGdlX2JhbGFuY2Vfb2Zmc2V0GAMgASgLMgwuY3FnLkRl",
            "Y2ltYWwiGgoYT2Zmc2V0SGVkZ2VCYWxhbmNlUmVzdWx0ImUKFUNoYW5nZU90",
            "Y1N0YXRlUmVxdWVzdBIXCg9vdGNfaW5zdGFuY2VfaWQYASABKA0SDgoGYWN0",
            "aW9uGAIgASgNIiMKBkFjdGlvbhIMCghBQ1RJVkFURRAAEgsKB1NVU1BFTkQQ",
            "ASIWChRDaGFuZ2VPdGNTdGF0ZVJlc3VsdCo3Cg1JbnN0YW5jZVN0YXRlEgoK",
            "Bk9OTElORRAAEgsKB09GRkxJTkUQARINCglTVVNQRU5ERUQQAg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Shared1.Shared1Reflection.Descriptor, global::Google.Protobuf.TimestampReflection.Descriptor, global::Cqg.DecimalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Otc1.InstanceState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OtcRequest), global::Otc1.OtcRequest.Parser, new[]{ "RequestId", "OtcInstancesSubscription", "HedgeBooksSubscription", "HedgeBookDetailsSubscription", "OffsetHedgeBalanceRequest", "ChangeOtcStateRequest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OtcReport), global::Otc1.OtcReport.Parser, new[]{ "RequestId", "ResultCode", "Details", "OtcInstancesReport", "HedgeBooksReport", "HedgeBookDetailsReport", "OffsetHedgeBalanceResult", "ChangeOtcStateResult" }, null, new[]{ typeof(global::Otc1.OtcReport.Types.StatusCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeBalanceKey), global::Otc1.HedgeBalanceKey.Parser, new[]{ "AccountId", "ContractId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OtcInstancesSubscription), global::Otc1.OtcInstancesSubscription.Parser, new[]{ "Subscribe" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OtcInstancesReport), global::Otc1.OtcInstancesReport.Parser, new[]{ "OtcInstanceState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OtcInstanceState), global::Otc1.OtcInstanceState.Parser, new[]{ "InstanceId", "Name", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeBooksSubscription), global::Otc1.HedgeBooksSubscription.Parser, new[]{ "Subscribe", "OtcInstanceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeBooksReport), global::Otc1.HedgeBooksReport.Parser, new[]{ "IsSnapshot", "IsLastPart", "HedgeBalanceDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeBalanceDetails), global::Otc1.HedgeBalanceDetails.Parser, new[]{ "HedgeBalanceKey", "Deleted", "HedgeBalance", "PendingBalance", "ContractSymbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeBookDetailsSubscription), global::Otc1.HedgeBookDetailsSubscription.Parser, new[]{ "Subscribe", "OtcInstanceId", "HedgeBalanceKey", "FromUtcTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeBookDetailsReport), global::Otc1.HedgeBookDetailsReport.Parser, new[]{ "IsSnapshot", "IsLastPart", "CashOrderDetails", "HedgeOrderDetails", "CashToHedgeOrdersLink" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.CashOrderDetails), global::Otc1.CashOrderDetails.Parser, new[]{ "ChainOrderId", "Deleted", "AccountId", "ContractId", "HedgeUtcTimestamp", "Units" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.HedgeOrderDetails), global::Otc1.HedgeOrderDetails.Parser, new[]{ "ChainOrderId", "Deleted", "HedgeUtcTimestamp", "Units", "OpenUnits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.CashToHedgeOrdersLink), global::Otc1.CashToHedgeOrdersLink.Parser, new[]{ "Deleted", "LinkUtcTimestamp", "CashOrderId", "HedgeOrderId", "LinkUnits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OffsetHedgeBalanceRequest), global::Otc1.OffsetHedgeBalanceRequest.Parser, new[]{ "OtcInstanceId", "HedgeBalanceKey", "HedgeBalanceOffset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.OffsetHedgeBalanceResult), global::Otc1.OffsetHedgeBalanceResult.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.ChangeOtcStateRequest), global::Otc1.ChangeOtcStateRequest.Parser, new[]{ "OtcInstanceId", "Action" }, null, new[]{ typeof(global::Otc1.ChangeOtcStateRequest.Types.Action) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Otc1.ChangeOtcStateResult), global::Otc1.ChangeOtcStateResult.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum InstanceState {
    /// <summary>
    /// Instance is online and processes orders.
    /// </summary>
    [pbr::OriginalName("ONLINE")] Online = 0,
    /// <summary>
    /// Instance is offline. Used only in status response. OTC may not be put offline by client request.
    /// </summary>
    [pbr::OriginalName("OFFLINE")] Offline = 1,
    /// <summary>
    /// Instance is suspended by ChangeOtcStateRequest.
    /// </summary>
    [pbr::OriginalName("SUSPENDED")] Suspended = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Client messages.
  /// </summary>
  public sealed partial class OtcRequest : pb::IMessage<OtcRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtcRequest> _parser = new pb::MessageParser<OtcRequest>(() => new OtcRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtcRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcRequest(OtcRequest other) : this() {
      requestId_ = other.requestId_;
      otcInstancesSubscription_ = other.otcInstancesSubscription_ != null ? other.otcInstancesSubscription_.Clone() : null;
      hedgeBooksSubscription_ = other.hedgeBooksSubscription_ != null ? other.hedgeBooksSubscription_.Clone() : null;
      hedgeBookDetailsSubscription_ = other.hedgeBookDetailsSubscription_ != null ? other.hedgeBookDetailsSubscription_.Clone() : null;
      offsetHedgeBalanceRequest_ = other.offsetHedgeBalanceRequest_ != null ? other.offsetHedgeBalanceRequest_.Clone() : null;
      changeOtcStateRequest_ = other.changeOtcStateRequest_ != null ? other.changeOtcStateRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcRequest Clone() {
      return new OtcRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static string RequestIdDefaultValue = "";

    private string requestId_;
    /// <summary>
    /// Request identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_ ?? RequestIdDefaultValue; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return requestId_ != null; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      requestId_ = null;
    }

    /// <summary>Field number for the "otc_instances_subscription" field.</summary>
    public const int OtcInstancesSubscriptionFieldNumber = 2;
    private global::Otc1.OtcInstancesSubscription otcInstancesSubscription_;
    /// <summary>
    /// OTC instances subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.OtcInstancesSubscription OtcInstancesSubscription {
      get { return otcInstancesSubscription_; }
      set {
        otcInstancesSubscription_ = value;
      }
    }

    /// <summary>Field number for the "hedge_books_subscription" field.</summary>
    public const int HedgeBooksSubscriptionFieldNumber = 3;
    private global::Otc1.HedgeBooksSubscription hedgeBooksSubscription_;
    /// <summary>
    /// Hedge books subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBooksSubscription HedgeBooksSubscription {
      get { return hedgeBooksSubscription_; }
      set {
        hedgeBooksSubscription_ = value;
      }
    }

    /// <summary>Field number for the "hedge_book_details_subscription" field.</summary>
    public const int HedgeBookDetailsSubscriptionFieldNumber = 4;
    private global::Otc1.HedgeBookDetailsSubscription hedgeBookDetailsSubscription_;
    /// <summary>
    /// Hedge book details subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBookDetailsSubscription HedgeBookDetailsSubscription {
      get { return hedgeBookDetailsSubscription_; }
      set {
        hedgeBookDetailsSubscription_ = value;
      }
    }

    /// <summary>Field number for the "offset_hedge_balance_request" field.</summary>
    public const int OffsetHedgeBalanceRequestFieldNumber = 5;
    private global::Otc1.OffsetHedgeBalanceRequest offsetHedgeBalanceRequest_;
    /// <summary>
    /// Offset hedge balance request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.OffsetHedgeBalanceRequest OffsetHedgeBalanceRequest {
      get { return offsetHedgeBalanceRequest_; }
      set {
        offsetHedgeBalanceRequest_ = value;
      }
    }

    /// <summary>Field number for the "change_otc_state_request" field.</summary>
    public const int ChangeOtcStateRequestFieldNumber = 6;
    private global::Otc1.ChangeOtcStateRequest changeOtcStateRequest_;
    /// <summary>
    /// Change OTC state request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.ChangeOtcStateRequest ChangeOtcStateRequest {
      get { return changeOtcStateRequest_; }
      set {
        changeOtcStateRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtcRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtcRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (!object.Equals(OtcInstancesSubscription, other.OtcInstancesSubscription)) return false;
      if (!object.Equals(HedgeBooksSubscription, other.HedgeBooksSubscription)) return false;
      if (!object.Equals(HedgeBookDetailsSubscription, other.HedgeBookDetailsSubscription)) return false;
      if (!object.Equals(OffsetHedgeBalanceRequest, other.OffsetHedgeBalanceRequest)) return false;
      if (!object.Equals(ChangeOtcStateRequest, other.ChangeOtcStateRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (otcInstancesSubscription_ != null) hash ^= OtcInstancesSubscription.GetHashCode();
      if (hedgeBooksSubscription_ != null) hash ^= HedgeBooksSubscription.GetHashCode();
      if (hedgeBookDetailsSubscription_ != null) hash ^= HedgeBookDetailsSubscription.GetHashCode();
      if (offsetHedgeBalanceRequest_ != null) hash ^= OffsetHedgeBalanceRequest.GetHashCode();
      if (changeOtcStateRequest_ != null) hash ^= ChangeOtcStateRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (otcInstancesSubscription_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OtcInstancesSubscription);
      }
      if (hedgeBooksSubscription_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBooksSubscription);
      }
      if (hedgeBookDetailsSubscription_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HedgeBookDetailsSubscription);
      }
      if (offsetHedgeBalanceRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OffsetHedgeBalanceRequest);
      }
      if (changeOtcStateRequest_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ChangeOtcStateRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (otcInstancesSubscription_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OtcInstancesSubscription);
      }
      if (hedgeBooksSubscription_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBooksSubscription);
      }
      if (hedgeBookDetailsSubscription_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HedgeBookDetailsSubscription);
      }
      if (offsetHedgeBalanceRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OffsetHedgeBalanceRequest);
      }
      if (changeOtcStateRequest_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ChangeOtcStateRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (otcInstancesSubscription_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtcInstancesSubscription);
      }
      if (hedgeBooksSubscription_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBooksSubscription);
      }
      if (hedgeBookDetailsSubscription_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBookDetailsSubscription);
      }
      if (offsetHedgeBalanceRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OffsetHedgeBalanceRequest);
      }
      if (changeOtcStateRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangeOtcStateRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtcRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.otcInstancesSubscription_ != null) {
        if (otcInstancesSubscription_ == null) {
          OtcInstancesSubscription = new global::Otc1.OtcInstancesSubscription();
        }
        OtcInstancesSubscription.MergeFrom(other.OtcInstancesSubscription);
      }
      if (other.hedgeBooksSubscription_ != null) {
        if (hedgeBooksSubscription_ == null) {
          HedgeBooksSubscription = new global::Otc1.HedgeBooksSubscription();
        }
        HedgeBooksSubscription.MergeFrom(other.HedgeBooksSubscription);
      }
      if (other.hedgeBookDetailsSubscription_ != null) {
        if (hedgeBookDetailsSubscription_ == null) {
          HedgeBookDetailsSubscription = new global::Otc1.HedgeBookDetailsSubscription();
        }
        HedgeBookDetailsSubscription.MergeFrom(other.HedgeBookDetailsSubscription);
      }
      if (other.offsetHedgeBalanceRequest_ != null) {
        if (offsetHedgeBalanceRequest_ == null) {
          OffsetHedgeBalanceRequest = new global::Otc1.OffsetHedgeBalanceRequest();
        }
        OffsetHedgeBalanceRequest.MergeFrom(other.OffsetHedgeBalanceRequest);
      }
      if (other.changeOtcStateRequest_ != null) {
        if (changeOtcStateRequest_ == null) {
          ChangeOtcStateRequest = new global::Otc1.ChangeOtcStateRequest();
        }
        ChangeOtcStateRequest.MergeFrom(other.ChangeOtcStateRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            if (otcInstancesSubscription_ == null) {
              OtcInstancesSubscription = new global::Otc1.OtcInstancesSubscription();
            }
            input.ReadMessage(OtcInstancesSubscription);
            break;
          }
          case 26: {
            if (hedgeBooksSubscription_ == null) {
              HedgeBooksSubscription = new global::Otc1.HedgeBooksSubscription();
            }
            input.ReadMessage(HedgeBooksSubscription);
            break;
          }
          case 34: {
            if (hedgeBookDetailsSubscription_ == null) {
              HedgeBookDetailsSubscription = new global::Otc1.HedgeBookDetailsSubscription();
            }
            input.ReadMessage(HedgeBookDetailsSubscription);
            break;
          }
          case 42: {
            if (offsetHedgeBalanceRequest_ == null) {
              OffsetHedgeBalanceRequest = new global::Otc1.OffsetHedgeBalanceRequest();
            }
            input.ReadMessage(OffsetHedgeBalanceRequest);
            break;
          }
          case 50: {
            if (changeOtcStateRequest_ == null) {
              ChangeOtcStateRequest = new global::Otc1.ChangeOtcStateRequest();
            }
            input.ReadMessage(ChangeOtcStateRequest);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            if (otcInstancesSubscription_ == null) {
              OtcInstancesSubscription = new global::Otc1.OtcInstancesSubscription();
            }
            input.ReadMessage(OtcInstancesSubscription);
            break;
          }
          case 26: {
            if (hedgeBooksSubscription_ == null) {
              HedgeBooksSubscription = new global::Otc1.HedgeBooksSubscription();
            }
            input.ReadMessage(HedgeBooksSubscription);
            break;
          }
          case 34: {
            if (hedgeBookDetailsSubscription_ == null) {
              HedgeBookDetailsSubscription = new global::Otc1.HedgeBookDetailsSubscription();
            }
            input.ReadMessage(HedgeBookDetailsSubscription);
            break;
          }
          case 42: {
            if (offsetHedgeBalanceRequest_ == null) {
              OffsetHedgeBalanceRequest = new global::Otc1.OffsetHedgeBalanceRequest();
            }
            input.ReadMessage(OffsetHedgeBalanceRequest);
            break;
          }
          case 50: {
            if (changeOtcStateRequest_ == null) {
              ChangeOtcStateRequest = new global::Otc1.ChangeOtcStateRequest();
            }
            input.ReadMessage(ChangeOtcStateRequest);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OTC/WebAPI responses.
  /// </summary>
  public sealed partial class OtcReport : pb::IMessage<OtcReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtcReport> _parser = new pb::MessageParser<OtcReport>(() => new OtcReport());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtcReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcReport(OtcReport other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      resultCode_ = other.resultCode_;
      details_ = other.details_ != null ? other.details_.Clone() : null;
      otcInstancesReport_ = other.otcInstancesReport_ != null ? other.otcInstancesReport_.Clone() : null;
      hedgeBooksReport_ = other.hedgeBooksReport_ != null ? other.hedgeBooksReport_.Clone() : null;
      hedgeBookDetailsReport_ = other.hedgeBookDetailsReport_ != null ? other.hedgeBookDetailsReport_.Clone() : null;
      offsetHedgeBalanceResult_ = other.offsetHedgeBalanceResult_ != null ? other.offsetHedgeBalanceResult_.Clone() : null;
      changeOtcStateResult_ = other.changeOtcStateResult_ != null ? other.changeOtcStateResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcReport Clone() {
      return new OtcReport(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static string RequestIdDefaultValue = "";

    private string requestId_;
    /// <summary>
    /// ID of a corresponding request or subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_ ?? RequestIdDefaultValue; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequestId {
      get { return requestId_ != null; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestId() {
      requestId_ = null;
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// Operation status.
    /// This field is associated with ResultCode enum.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private global::Shared1.Text details_;
    /// <summary>
    /// Operation details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Shared1.Text Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "otc_instances_report" field.</summary>
    public const int OtcInstancesReportFieldNumber = 4;
    private global::Otc1.OtcInstancesReport otcInstancesReport_;
    /// <summary>
    /// OTC instances report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.OtcInstancesReport OtcInstancesReport {
      get { return otcInstancesReport_; }
      set {
        otcInstancesReport_ = value;
      }
    }

    /// <summary>Field number for the "hedge_books_report" field.</summary>
    public const int HedgeBooksReportFieldNumber = 5;
    private global::Otc1.HedgeBooksReport hedgeBooksReport_;
    /// <summary>
    /// Hedge books report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBooksReport HedgeBooksReport {
      get { return hedgeBooksReport_; }
      set {
        hedgeBooksReport_ = value;
      }
    }

    /// <summary>Field number for the "hedge_book_details_report" field.</summary>
    public const int HedgeBookDetailsReportFieldNumber = 6;
    private global::Otc1.HedgeBookDetailsReport hedgeBookDetailsReport_;
    /// <summary>
    /// Hedge book details report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBookDetailsReport HedgeBookDetailsReport {
      get { return hedgeBookDetailsReport_; }
      set {
        hedgeBookDetailsReport_ = value;
      }
    }

    /// <summary>Field number for the "offset_hedge_balance_result" field.</summary>
    public const int OffsetHedgeBalanceResultFieldNumber = 7;
    private global::Otc1.OffsetHedgeBalanceResult offsetHedgeBalanceResult_;
    /// <summary>
    /// Offset hedge balance result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.OffsetHedgeBalanceResult OffsetHedgeBalanceResult {
      get { return offsetHedgeBalanceResult_; }
      set {
        offsetHedgeBalanceResult_ = value;
      }
    }

    /// <summary>Field number for the "change_otc_state_result" field.</summary>
    public const int ChangeOtcStateResultFieldNumber = 8;
    private global::Otc1.ChangeOtcStateResult changeOtcStateResult_;
    /// <summary>
    /// Change OTC state result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.ChangeOtcStateResult ChangeOtcStateResult {
      get { return changeOtcStateResult_; }
      set {
        changeOtcStateResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtcReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtcReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ResultCode != other.ResultCode) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (!object.Equals(OtcInstancesReport, other.OtcInstancesReport)) return false;
      if (!object.Equals(HedgeBooksReport, other.HedgeBooksReport)) return false;
      if (!object.Equals(HedgeBookDetailsReport, other.HedgeBookDetailsReport)) return false;
      if (!object.Equals(OffsetHedgeBalanceResult, other.OffsetHedgeBalanceResult)) return false;
      if (!object.Equals(ChangeOtcStateResult, other.ChangeOtcStateResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (otcInstancesReport_ != null) hash ^= OtcInstancesReport.GetHashCode();
      if (hedgeBooksReport_ != null) hash ^= HedgeBooksReport.GetHashCode();
      if (hedgeBookDetailsReport_ != null) hash ^= HedgeBookDetailsReport.GetHashCode();
      if (offsetHedgeBalanceResult_ != null) hash ^= OffsetHedgeBalanceResult.GetHashCode();
      if (changeOtcStateResult_ != null) hash ^= ChangeOtcStateResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (otcInstancesReport_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OtcInstancesReport);
      }
      if (hedgeBooksReport_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HedgeBooksReport);
      }
      if (hedgeBookDetailsReport_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HedgeBookDetailsReport);
      }
      if (offsetHedgeBalanceResult_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OffsetHedgeBalanceResult);
      }
      if (changeOtcStateResult_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ChangeOtcStateResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (details_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Details);
      }
      if (otcInstancesReport_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OtcInstancesReport);
      }
      if (hedgeBooksReport_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HedgeBooksReport);
      }
      if (hedgeBookDetailsReport_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HedgeBookDetailsReport);
      }
      if (offsetHedgeBalanceResult_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OffsetHedgeBalanceResult);
      }
      if (changeOtcStateResult_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ChangeOtcStateResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (otcInstancesReport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtcInstancesReport);
      }
      if (hedgeBooksReport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBooksReport);
      }
      if (hedgeBookDetailsReport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBookDetailsReport);
      }
      if (offsetHedgeBalanceResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OffsetHedgeBalanceResult);
      }
      if (changeOtcStateResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangeOtcStateResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtcReport other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.details_ != null) {
        if (details_ == null) {
          Details = new global::Shared1.Text();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.otcInstancesReport_ != null) {
        if (otcInstancesReport_ == null) {
          OtcInstancesReport = new global::Otc1.OtcInstancesReport();
        }
        OtcInstancesReport.MergeFrom(other.OtcInstancesReport);
      }
      if (other.hedgeBooksReport_ != null) {
        if (hedgeBooksReport_ == null) {
          HedgeBooksReport = new global::Otc1.HedgeBooksReport();
        }
        HedgeBooksReport.MergeFrom(other.HedgeBooksReport);
      }
      if (other.hedgeBookDetailsReport_ != null) {
        if (hedgeBookDetailsReport_ == null) {
          HedgeBookDetailsReport = new global::Otc1.HedgeBookDetailsReport();
        }
        HedgeBookDetailsReport.MergeFrom(other.HedgeBookDetailsReport);
      }
      if (other.offsetHedgeBalanceResult_ != null) {
        if (offsetHedgeBalanceResult_ == null) {
          OffsetHedgeBalanceResult = new global::Otc1.OffsetHedgeBalanceResult();
        }
        OffsetHedgeBalanceResult.MergeFrom(other.OffsetHedgeBalanceResult);
      }
      if (other.changeOtcStateResult_ != null) {
        if (changeOtcStateResult_ == null) {
          ChangeOtcStateResult = new global::Otc1.ChangeOtcStateResult();
        }
        ChangeOtcStateResult.MergeFrom(other.ChangeOtcStateResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Shared1.Text();
            }
            input.ReadMessage(Details);
            break;
          }
          case 34: {
            if (otcInstancesReport_ == null) {
              OtcInstancesReport = new global::Otc1.OtcInstancesReport();
            }
            input.ReadMessage(OtcInstancesReport);
            break;
          }
          case 42: {
            if (hedgeBooksReport_ == null) {
              HedgeBooksReport = new global::Otc1.HedgeBooksReport();
            }
            input.ReadMessage(HedgeBooksReport);
            break;
          }
          case 50: {
            if (hedgeBookDetailsReport_ == null) {
              HedgeBookDetailsReport = new global::Otc1.HedgeBookDetailsReport();
            }
            input.ReadMessage(HedgeBookDetailsReport);
            break;
          }
          case 58: {
            if (offsetHedgeBalanceResult_ == null) {
              OffsetHedgeBalanceResult = new global::Otc1.OffsetHedgeBalanceResult();
            }
            input.ReadMessage(OffsetHedgeBalanceResult);
            break;
          }
          case 66: {
            if (changeOtcStateResult_ == null) {
              ChangeOtcStateResult = new global::Otc1.ChangeOtcStateResult();
            }
            input.ReadMessage(ChangeOtcStateResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 26: {
            if (details_ == null) {
              Details = new global::Shared1.Text();
            }
            input.ReadMessage(Details);
            break;
          }
          case 34: {
            if (otcInstancesReport_ == null) {
              OtcInstancesReport = new global::Otc1.OtcInstancesReport();
            }
            input.ReadMessage(OtcInstancesReport);
            break;
          }
          case 42: {
            if (hedgeBooksReport_ == null) {
              HedgeBooksReport = new global::Otc1.HedgeBooksReport();
            }
            input.ReadMessage(HedgeBooksReport);
            break;
          }
          case 50: {
            if (hedgeBookDetailsReport_ == null) {
              HedgeBookDetailsReport = new global::Otc1.HedgeBookDetailsReport();
            }
            input.ReadMessage(HedgeBookDetailsReport);
            break;
          }
          case 58: {
            if (offsetHedgeBalanceResult_ == null) {
              OffsetHedgeBalanceResult = new global::Otc1.OffsetHedgeBalanceResult();
            }
            input.ReadMessage(OffsetHedgeBalanceResult);
            break;
          }
          case 66: {
            if (changeOtcStateResult_ == null) {
              ChangeOtcStateResult = new global::Otc1.ChangeOtcStateResult();
            }
            input.ReadMessage(ChangeOtcStateResult);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OtcReport message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum StatusCode {
        /// <summary>
        //// success codes (0 - 100)
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 0,
        /// <summary>
        /// Request is processed and subscription is established.
        /// </summary>
        [pbr::OriginalName("SUBSCRIBED")] Subscribed = 1,
        /// <summary>
        /// Subscription is dropped by a client request.
        /// </summary>
        [pbr::OriginalName("DROPPED")] Dropped = 2,
        /// <summary>
        /// Unsolicited information update because of subscription.
        /// </summary>
        [pbr::OriginalName("UPDATE")] Update = 3,
        /// <summary>
        /// Currently subscription is disconnected because of communication issues.
        /// NOTE: Clients should not resubscribe in this case, the server will restore subscription with
        /// sending SUBSCRIBED status once communication issues are resolved.
        /// </summary>
        [pbr::OriginalName("DISCONNECTED")] Disconnected = 4,
        /// <summary>
        ///// failure codes (100+)
        /// General failure.
        /// </summary>
        [pbr::OriginalName("FAILURE")] Failure = 101,
        /// <summary>
        /// Subscription parameters are invalid.
        /// </summary>
        [pbr::OriginalName("INVALID_PARAMS")] InvalidParams = 102,
        /// <summary>
        /// The user is not allowed to be subscribed to this OTC instance.
        /// </summary>
        [pbr::OriginalName("ACCESS_DENIED")] AccessDenied = 103,
        /// <summary>
        /// The subscription count limit has been violated.
        /// </summary>
        [pbr::OriginalName("SUBSCRIPTION_LIMIT_VIOLATION")] SubscriptionLimitViolation = 104,
        /// <summary>
        /// The subscription rate limit has been violated.
        /// </summary>
        [pbr::OriginalName("SUBSCRIPTION_RATE_LIMIT_VIOLATION")] SubscriptionRateLimitViolation = 105,
      }

    }
    #endregion

  }

  /// <summary>
  /// Hedge balance key.
  /// </summary>
  public sealed partial class HedgeBalanceKey : pb::IExtendableMessage<HedgeBalanceKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeBalanceKey> _parser = new pb::MessageParser<HedgeBalanceKey>(() => new HedgeBalanceKey());
    private pb::UnknownFieldSet _unknownFields;
    private pb::ExtensionSet<HedgeBalanceKey> _extensions;
    private pb::ExtensionSet<HedgeBalanceKey> _Extensions { get { return _extensions; } }
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeBalanceKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBalanceKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBalanceKey(HedgeBalanceKey other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      contractId_ = other.contractId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      _extensions = pb::ExtensionSet.Clone(other._extensions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBalanceKey Clone() {
      return new HedgeBalanceKey(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static int AccountIdDefaultValue = 0;

    private int accountId_;
    /// <summary>
    /// Hedge Account ID in CQG trade routing system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "contract_id" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private readonly static uint ContractIdDefaultValue = 0;

    private uint contractId_;
    /// <summary>
    /// Server side contract id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ContractId {
      get { if ((_hasBits0 & 2) != 0) { return contractId_; } else { return ContractIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        contractId_ = value;
      }
    }
    /// <summary>Gets whether the "contract_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContractId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "contract_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContractId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeBalanceKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeBalanceKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (ContractId != other.ContractId) return false;
      if (!Equals(_extensions, other._extensions)) {
        return false;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasContractId) hash ^= ContractId.GetHashCode();
      if (_extensions != null) {
        hash ^= _extensions.GetHashCode();
      }
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteSInt32(AccountId);
      }
      if (HasContractId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ContractId);
      }
      if (_extensions != null) {
        _extensions.WriteTo(output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteSInt32(AccountId);
      }
      if (HasContractId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ContractId);
      }
      if (_extensions != null) {
        _extensions.WriteTo(ref output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountId);
      }
      if (HasContractId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContractId);
      }
      if (_extensions != null) {
        size += _extensions.CalculateSize();
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeBalanceKey other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasContractId) {
        ContractId = other.ContractId;
      }
      pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            }
            break;
          case 8: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 16: {
            ContractId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            }
            break;
          case 8: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 16: {
            ContractId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    public TValue GetExtension<TValue>(pb::Extension<HedgeBalanceKey, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<HedgeBalanceKey, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<HedgeBalanceKey, TValue> extension) {
      return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
    }
    public void SetExtension<TValue>(pb::Extension<HedgeBalanceKey, TValue> extension, TValue value) {
      pb::ExtensionSet.Set(ref _extensions, extension, value);
    }
    public bool HasExtension<TValue>(pb::Extension<HedgeBalanceKey, TValue> extension) {
      return pb::ExtensionSet.Has(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::Extension<HedgeBalanceKey, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::RepeatedExtension<HedgeBalanceKey, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }

  }

  /// <summary>
  /// OTC instances subscription.
  /// </summary>
  public sealed partial class OtcInstancesSubscription : pb::IMessage<OtcInstancesSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtcInstancesSubscription> _parser = new pb::MessageParser<OtcInstancesSubscription>(() => new OtcInstancesSubscription());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtcInstancesSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstancesSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstancesSubscription(OtcInstancesSubscription other) : this() {
      _hasBits0 = other._hasBits0;
      subscribe_ = other.subscribe_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstancesSubscription Clone() {
      return new OtcInstancesSubscription(this);
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 1;
    private readonly static bool SubscribeDefaultValue = true;

    private bool subscribe_;
    /// <summary>
    /// If set to true - subscribe to changes, if false - drop subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribe {
      get { if ((_hasBits0 & 1) != 0) { return subscribe_; } else { return SubscribeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscribe_ = value;
      }
    }
    /// <summary>Gets whether the "subscribe" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribe {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscribe" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribe() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtcInstancesSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtcInstancesSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscribe != other.Subscribe) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscribe) hash ^= Subscribe.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSubscribe) {
        output.WriteRawTag(8);
        output.WriteBool(Subscribe);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSubscribe) {
        output.WriteRawTag(8);
        output.WriteBool(Subscribe);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscribe) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtcInstancesSubscription other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscribe) {
        Subscribe = other.Subscribe;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Subscribe = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Subscribe = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OTC instances report.
  /// </summary>
  public sealed partial class OtcInstancesReport : pb::IMessage<OtcInstancesReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtcInstancesReport> _parser = new pb::MessageParser<OtcInstancesReport>(() => new OtcInstancesReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtcInstancesReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstancesReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstancesReport(OtcInstancesReport other) : this() {
      otcInstanceState_ = other.otcInstanceState_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstancesReport Clone() {
      return new OtcInstancesReport(this);
    }

    /// <summary>Field number for the "otc_instance_state" field.</summary>
    public const int OtcInstanceStateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Otc1.OtcInstanceState> _repeated_otcInstanceState_codec
        = pb::FieldCodec.ForMessage(10, global::Otc1.OtcInstanceState.Parser);
    private readonly pbc::RepeatedField<global::Otc1.OtcInstanceState> otcInstanceState_ = new pbc::RepeatedField<global::Otc1.OtcInstanceState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Otc1.OtcInstanceState> OtcInstanceState {
      get { return otcInstanceState_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtcInstancesReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtcInstancesReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!otcInstanceState_.Equals(other.otcInstanceState_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= otcInstanceState_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      otcInstanceState_.WriteTo(output, _repeated_otcInstanceState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      otcInstanceState_.WriteTo(ref output, _repeated_otcInstanceState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += otcInstanceState_.CalculateSize(_repeated_otcInstanceState_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtcInstancesReport other) {
      if (other == null) {
        return;
      }
      otcInstanceState_.Add(other.otcInstanceState_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            otcInstanceState_.AddEntriesFrom(input, _repeated_otcInstanceState_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            otcInstanceState_.AddEntriesFrom(ref input, _repeated_otcInstanceState_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OTC instance state.
  /// </summary>
  public sealed partial class OtcInstanceState : pb::IMessage<OtcInstanceState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OtcInstanceState> _parser = new pb::MessageParser<OtcInstanceState>(() => new OtcInstanceState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OtcInstanceState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstanceState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstanceState(OtcInstanceState other) : this() {
      _hasBits0 = other._hasBits0;
      instanceId_ = other.instanceId_;
      name_ = other.name_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OtcInstanceState Clone() {
      return new OtcInstanceState(this);
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 1;
    private readonly static uint InstanceIdDefaultValue = 0;

    private uint instanceId_;
    /// <summary>
    /// OTC instance ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InstanceId {
      get { if ((_hasBits0 & 1) != 0) { return instanceId_; } else { return InstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        instanceId_ = value;
      }
    }
    /// <summary>Gets whether the "instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInstanceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInstanceId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// OTC instance name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private readonly static uint StateDefaultValue = 0;

    private uint state_;
    /// <summary>
    /// OTC instance state.
    /// This field is associated with InstanceState enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OtcInstanceState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OtcInstanceState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstanceId != other.InstanceId) return false;
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInstanceId) hash ^= InstanceId.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInstanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(InstanceId);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInstanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(InstanceId);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasState) {
        output.WriteRawTag(24);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InstanceId);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OtcInstanceState other) {
      if (other == null) {
        return;
      }
      if (other.HasInstanceId) {
        InstanceId = other.InstanceId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasState) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InstanceId = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InstanceId = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Hedge books subscription.
  /// </summary>
  public sealed partial class HedgeBooksSubscription : pb::IMessage<HedgeBooksSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeBooksSubscription> _parser = new pb::MessageParser<HedgeBooksSubscription>(() => new HedgeBooksSubscription());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeBooksSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBooksSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBooksSubscription(HedgeBooksSubscription other) : this() {
      _hasBits0 = other._hasBits0;
      subscribe_ = other.subscribe_;
      otcInstanceId_ = other.otcInstanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBooksSubscription Clone() {
      return new HedgeBooksSubscription(this);
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 1;
    private readonly static bool SubscribeDefaultValue = true;

    private bool subscribe_;
    /// <summary>
    /// If set to true - subscribe to changes, if false - drop subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribe {
      get { if ((_hasBits0 & 1) != 0) { return subscribe_; } else { return SubscribeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscribe_ = value;
      }
    }
    /// <summary>Gets whether the "subscribe" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribe {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscribe" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribe() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "otc_instance_id" field.</summary>
    public const int OtcInstanceIdFieldNumber = 2;
    private readonly static uint OtcInstanceIdDefaultValue = 0;

    private uint otcInstanceId_;
    /// <summary>
    /// OTC instance id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OtcInstanceId {
      get { if ((_hasBits0 & 2) != 0) { return otcInstanceId_; } else { return OtcInstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        otcInstanceId_ = value;
      }
    }
    /// <summary>Gets whether the "otc_instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOtcInstanceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "otc_instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOtcInstanceId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeBooksSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeBooksSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscribe != other.Subscribe) return false;
      if (OtcInstanceId != other.OtcInstanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscribe) hash ^= Subscribe.GetHashCode();
      if (HasOtcInstanceId) hash ^= OtcInstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSubscribe) {
        output.WriteRawTag(8);
        output.WriteBool(Subscribe);
      }
      if (HasOtcInstanceId) {
        output.WriteRawTag(16);
        output.WriteUInt32(OtcInstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSubscribe) {
        output.WriteRawTag(8);
        output.WriteBool(Subscribe);
      }
      if (HasOtcInstanceId) {
        output.WriteRawTag(16);
        output.WriteUInt32(OtcInstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscribe) {
        size += 1 + 1;
      }
      if (HasOtcInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OtcInstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeBooksSubscription other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscribe) {
        Subscribe = other.Subscribe;
      }
      if (other.HasOtcInstanceId) {
        OtcInstanceId = other.OtcInstanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Subscribe = input.ReadBool();
            break;
          }
          case 16: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Subscribe = input.ReadBool();
            break;
          }
          case 16: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Hedge books report.
  /// </summary>
  public sealed partial class HedgeBooksReport : pb::IMessage<HedgeBooksReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeBooksReport> _parser = new pb::MessageParser<HedgeBooksReport>(() => new HedgeBooksReport());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeBooksReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBooksReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBooksReport(HedgeBooksReport other) : this() {
      _hasBits0 = other._hasBits0;
      isSnapshot_ = other.isSnapshot_;
      isLastPart_ = other.isLastPart_;
      hedgeBalanceDetails_ = other.hedgeBalanceDetails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBooksReport Clone() {
      return new HedgeBooksReport(this);
    }

    /// <summary>Field number for the "is_snapshot" field.</summary>
    public const int IsSnapshotFieldNumber = 1;
    private readonly static bool IsSnapshotDefaultValue = false;

    private bool isSnapshot_;
    /// <summary>
    /// True if this is a snapshot (all previously known data about this hedge book should be cleaned).
    /// All updates will be postponed until full snapshot is sent.
    /// False used for incremental updates.
    /// Snapshot will be sent only once after subscription. May be sent in multiple parts. Each part will have this field
    /// set to true. False by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSnapshot {
      get { if ((_hasBits0 & 1) != 0) { return isSnapshot_; } else { return IsSnapshotDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isSnapshot_ = value;
      }
    }
    /// <summary>Gets whether the "is_snapshot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsSnapshot {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_snapshot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsSnapshot() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_last_part" field.</summary>
    public const int IsLastPartFieldNumber = 2;
    private readonly static bool IsLastPartDefaultValue = false;

    private bool isLastPart_;
    /// <summary>
    /// If true - then this message mean last part of multi-parted snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPart {
      get { if ((_hasBits0 & 2) != 0) { return isLastPart_; } else { return IsLastPartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isLastPart_ = value;
      }
    }
    /// <summary>Gets whether the "is_last_part" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsLastPart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_last_part" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsLastPart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hedge_balance_details" field.</summary>
    public const int HedgeBalanceDetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Otc1.HedgeBalanceDetails> _repeated_hedgeBalanceDetails_codec
        = pb::FieldCodec.ForMessage(26, global::Otc1.HedgeBalanceDetails.Parser);
    private readonly pbc::RepeatedField<global::Otc1.HedgeBalanceDetails> hedgeBalanceDetails_ = new pbc::RepeatedField<global::Otc1.HedgeBalanceDetails>();
    /// <summary>
    /// Hedge balance details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Otc1.HedgeBalanceDetails> HedgeBalanceDetails {
      get { return hedgeBalanceDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeBooksReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeBooksReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSnapshot != other.IsSnapshot) return false;
      if (IsLastPart != other.IsLastPart) return false;
      if(!hedgeBalanceDetails_.Equals(other.hedgeBalanceDetails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsSnapshot) hash ^= IsSnapshot.GetHashCode();
      if (HasIsLastPart) hash ^= IsLastPart.GetHashCode();
      hash ^= hedgeBalanceDetails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsSnapshot) {
        output.WriteRawTag(8);
        output.WriteBool(IsSnapshot);
      }
      if (HasIsLastPart) {
        output.WriteRawTag(16);
        output.WriteBool(IsLastPart);
      }
      hedgeBalanceDetails_.WriteTo(output, _repeated_hedgeBalanceDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsSnapshot) {
        output.WriteRawTag(8);
        output.WriteBool(IsSnapshot);
      }
      if (HasIsLastPart) {
        output.WriteRawTag(16);
        output.WriteBool(IsLastPart);
      }
      hedgeBalanceDetails_.WriteTo(ref output, _repeated_hedgeBalanceDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIsSnapshot) {
        size += 1 + 1;
      }
      if (HasIsLastPart) {
        size += 1 + 1;
      }
      size += hedgeBalanceDetails_.CalculateSize(_repeated_hedgeBalanceDetails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeBooksReport other) {
      if (other == null) {
        return;
      }
      if (other.HasIsSnapshot) {
        IsSnapshot = other.IsSnapshot;
      }
      if (other.HasIsLastPart) {
        IsLastPart = other.IsLastPart;
      }
      hedgeBalanceDetails_.Add(other.hedgeBalanceDetails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSnapshot = input.ReadBool();
            break;
          }
          case 16: {
            IsLastPart = input.ReadBool();
            break;
          }
          case 26: {
            hedgeBalanceDetails_.AddEntriesFrom(input, _repeated_hedgeBalanceDetails_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsSnapshot = input.ReadBool();
            break;
          }
          case 16: {
            IsLastPart = input.ReadBool();
            break;
          }
          case 26: {
            hedgeBalanceDetails_.AddEntriesFrom(ref input, _repeated_hedgeBalanceDetails_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HedgeBalanceDetails : pb::IMessage<HedgeBalanceDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeBalanceDetails> _parser = new pb::MessageParser<HedgeBalanceDetails>(() => new HedgeBalanceDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeBalanceDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBalanceDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBalanceDetails(HedgeBalanceDetails other) : this() {
      _hasBits0 = other._hasBits0;
      hedgeBalanceKey_ = other.hedgeBalanceKey_ != null ? other.hedgeBalanceKey_.Clone() : null;
      deleted_ = other.deleted_;
      hedgeBalance_ = other.hedgeBalance_ != null ? other.hedgeBalance_.Clone() : null;
      pendingBalance_ = other.pendingBalance_ != null ? other.pendingBalance_.Clone() : null;
      contractSymbol_ = other.contractSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBalanceDetails Clone() {
      return new HedgeBalanceDetails(this);
    }

    /// <summary>Field number for the "hedge_balance_key" field.</summary>
    public const int HedgeBalanceKeyFieldNumber = 1;
    private global::Otc1.HedgeBalanceKey hedgeBalanceKey_;
    /// <summary>
    /// Hedge balance key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBalanceKey HedgeBalanceKey {
      get { return hedgeBalanceKey_; }
      set {
        hedgeBalanceKey_ = value;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 2;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    /// <summary>
    /// Deleted flag is used in updates when entity is removed.
    /// Only hedge_balance_key will be provided in this case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { if ((_hasBits0 & 1) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeleted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeleted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hedge_balance" field.</summary>
    public const int HedgeBalanceFieldNumber = 3;
    private global::Cqg.Decimal hedgeBalance_;
    /// <summary>
    /// Current hedge balance in units. If missing - hedge balance is not changed since last update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal HedgeBalance {
      get { return hedgeBalance_; }
      set {
        hedgeBalance_ = value;
      }
    }

    /// <summary>Field number for the "pending_balance" field.</summary>
    public const int PendingBalanceFieldNumber = 4;
    private global::Cqg.Decimal pendingBalance_;
    /// <summary>
    /// Pending balance in units. Means non-filled hedge orders size in units.
    /// If missing - pending balance is not changed since last update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal PendingBalance {
      get { return pendingBalance_; }
      set {
        pendingBalance_ = value;
      }
    }

    /// <summary>Field number for the "contract_symbol" field.</summary>
    public const int ContractSymbolFieldNumber = 5;
    private readonly static string ContractSymbolDefaultValue = "";

    private string contractSymbol_;
    /// <summary>
    /// Full contract symbol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractSymbol {
      get { return contractSymbol_ ?? ContractSymbolDefaultValue; }
      set {
        contractSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "contract_symbol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContractSymbol {
      get { return contractSymbol_ != null; }
    }
    /// <summary>Clears the value of the "contract_symbol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContractSymbol() {
      contractSymbol_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeBalanceDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeBalanceDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HedgeBalanceKey, other.HedgeBalanceKey)) return false;
      if (Deleted != other.Deleted) return false;
      if (!object.Equals(HedgeBalance, other.HedgeBalance)) return false;
      if (!object.Equals(PendingBalance, other.PendingBalance)) return false;
      if (ContractSymbol != other.ContractSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hedgeBalanceKey_ != null) hash ^= HedgeBalanceKey.GetHashCode();
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (hedgeBalance_ != null) hash ^= HedgeBalance.GetHashCode();
      if (pendingBalance_ != null) hash ^= PendingBalance.GetHashCode();
      if (HasContractSymbol) hash ^= ContractSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (hedgeBalanceKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HedgeBalanceKey);
      }
      if (HasDeleted) {
        output.WriteRawTag(16);
        output.WriteBool(Deleted);
      }
      if (hedgeBalance_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBalance);
      }
      if (pendingBalance_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PendingBalance);
      }
      if (HasContractSymbol) {
        output.WriteRawTag(42);
        output.WriteString(ContractSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (hedgeBalanceKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HedgeBalanceKey);
      }
      if (HasDeleted) {
        output.WriteRawTag(16);
        output.WriteBool(Deleted);
      }
      if (hedgeBalance_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBalance);
      }
      if (pendingBalance_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PendingBalance);
      }
      if (HasContractSymbol) {
        output.WriteRawTag(42);
        output.WriteString(ContractSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hedgeBalanceKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBalanceKey);
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (hedgeBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBalance);
      }
      if (pendingBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PendingBalance);
      }
      if (HasContractSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeBalanceDetails other) {
      if (other == null) {
        return;
      }
      if (other.hedgeBalanceKey_ != null) {
        if (hedgeBalanceKey_ == null) {
          HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
        }
        HedgeBalanceKey.MergeFrom(other.HedgeBalanceKey);
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.hedgeBalance_ != null) {
        if (hedgeBalance_ == null) {
          HedgeBalance = new global::Cqg.Decimal();
        }
        HedgeBalance.MergeFrom(other.HedgeBalance);
      }
      if (other.pendingBalance_ != null) {
        if (pendingBalance_ == null) {
          PendingBalance = new global::Cqg.Decimal();
        }
        PendingBalance.MergeFrom(other.PendingBalance);
      }
      if (other.HasContractSymbol) {
        ContractSymbol = other.ContractSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hedgeBalanceKey_ == null) {
              HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
            }
            input.ReadMessage(HedgeBalanceKey);
            break;
          }
          case 16: {
            Deleted = input.ReadBool();
            break;
          }
          case 26: {
            if (hedgeBalance_ == null) {
              HedgeBalance = new global::Cqg.Decimal();
            }
            input.ReadMessage(HedgeBalance);
            break;
          }
          case 34: {
            if (pendingBalance_ == null) {
              PendingBalance = new global::Cqg.Decimal();
            }
            input.ReadMessage(PendingBalance);
            break;
          }
          case 42: {
            ContractSymbol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (hedgeBalanceKey_ == null) {
              HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
            }
            input.ReadMessage(HedgeBalanceKey);
            break;
          }
          case 16: {
            Deleted = input.ReadBool();
            break;
          }
          case 26: {
            if (hedgeBalance_ == null) {
              HedgeBalance = new global::Cqg.Decimal();
            }
            input.ReadMessage(HedgeBalance);
            break;
          }
          case 34: {
            if (pendingBalance_ == null) {
              PendingBalance = new global::Cqg.Decimal();
            }
            input.ReadMessage(PendingBalance);
            break;
          }
          case 42: {
            ContractSymbol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Hedge book details subscription.
  /// </summary>
  public sealed partial class HedgeBookDetailsSubscription : pb::IMessage<HedgeBookDetailsSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeBookDetailsSubscription> _parser = new pb::MessageParser<HedgeBookDetailsSubscription>(() => new HedgeBookDetailsSubscription());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeBookDetailsSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBookDetailsSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBookDetailsSubscription(HedgeBookDetailsSubscription other) : this() {
      _hasBits0 = other._hasBits0;
      subscribe_ = other.subscribe_;
      otcInstanceId_ = other.otcInstanceId_;
      hedgeBalanceKey_ = other.hedgeBalanceKey_ != null ? other.hedgeBalanceKey_.Clone() : null;
      fromUtcTimestamp_ = other.fromUtcTimestamp_ != null ? other.fromUtcTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBookDetailsSubscription Clone() {
      return new HedgeBookDetailsSubscription(this);
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 1;
    private readonly static bool SubscribeDefaultValue = true;

    private bool subscribe_;
    /// <summary>
    /// If set to true - subscribe to changes, if false - drop subscription.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Subscribe {
      get { if ((_hasBits0 & 1) != 0) { return subscribe_; } else { return SubscribeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscribe_ = value;
      }
    }
    /// <summary>Gets whether the "subscribe" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscribe {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscribe" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscribe() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "otc_instance_id" field.</summary>
    public const int OtcInstanceIdFieldNumber = 2;
    private readonly static uint OtcInstanceIdDefaultValue = 0;

    private uint otcInstanceId_;
    /// <summary>
    /// OTC instance id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OtcInstanceId {
      get { if ((_hasBits0 & 2) != 0) { return otcInstanceId_; } else { return OtcInstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        otcInstanceId_ = value;
      }
    }
    /// <summary>Gets whether the "otc_instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOtcInstanceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "otc_instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOtcInstanceId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hedge_balance_key" field.</summary>
    public const int HedgeBalanceKeyFieldNumber = 3;
    private global::Otc1.HedgeBalanceKey hedgeBalanceKey_;
    /// <summary>
    /// Hedge balance key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBalanceKey HedgeBalanceKey {
      get { return hedgeBalanceKey_; }
      set {
        hedgeBalanceKey_ = value;
      }
    }

    /// <summary>Field number for the "from_utc_timestamp" field.</summary>
    public const int FromUtcTimestampFieldNumber = 4;
    private global::Google.Protobuf.Timestamp fromUtcTimestamp_;
    /// <summary>
    /// Start point for the history request, inclusive.
    /// Maximum allowed history is returned if omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp FromUtcTimestamp {
      get { return fromUtcTimestamp_; }
      set {
        fromUtcTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeBookDetailsSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeBookDetailsSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subscribe != other.Subscribe) return false;
      if (OtcInstanceId != other.OtcInstanceId) return false;
      if (!object.Equals(HedgeBalanceKey, other.HedgeBalanceKey)) return false;
      if (!object.Equals(FromUtcTimestamp, other.FromUtcTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubscribe) hash ^= Subscribe.GetHashCode();
      if (HasOtcInstanceId) hash ^= OtcInstanceId.GetHashCode();
      if (hedgeBalanceKey_ != null) hash ^= HedgeBalanceKey.GetHashCode();
      if (fromUtcTimestamp_ != null) hash ^= FromUtcTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSubscribe) {
        output.WriteRawTag(8);
        output.WriteBool(Subscribe);
      }
      if (HasOtcInstanceId) {
        output.WriteRawTag(16);
        output.WriteUInt32(OtcInstanceId);
      }
      if (hedgeBalanceKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBalanceKey);
      }
      if (fromUtcTimestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromUtcTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSubscribe) {
        output.WriteRawTag(8);
        output.WriteBool(Subscribe);
      }
      if (HasOtcInstanceId) {
        output.WriteRawTag(16);
        output.WriteUInt32(OtcInstanceId);
      }
      if (hedgeBalanceKey_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBalanceKey);
      }
      if (fromUtcTimestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromUtcTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubscribe) {
        size += 1 + 1;
      }
      if (HasOtcInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OtcInstanceId);
      }
      if (hedgeBalanceKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBalanceKey);
      }
      if (fromUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromUtcTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeBookDetailsSubscription other) {
      if (other == null) {
        return;
      }
      if (other.HasSubscribe) {
        Subscribe = other.Subscribe;
      }
      if (other.HasOtcInstanceId) {
        OtcInstanceId = other.OtcInstanceId;
      }
      if (other.hedgeBalanceKey_ != null) {
        if (hedgeBalanceKey_ == null) {
          HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
        }
        HedgeBalanceKey.MergeFrom(other.HedgeBalanceKey);
      }
      if (other.fromUtcTimestamp_ != null) {
        if (fromUtcTimestamp_ == null) {
          FromUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        FromUtcTimestamp.MergeFrom(other.FromUtcTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Subscribe = input.ReadBool();
            break;
          }
          case 16: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
          case 26: {
            if (hedgeBalanceKey_ == null) {
              HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
            }
            input.ReadMessage(HedgeBalanceKey);
            break;
          }
          case 34: {
            if (fromUtcTimestamp_ == null) {
              FromUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(FromUtcTimestamp);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Subscribe = input.ReadBool();
            break;
          }
          case 16: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
          case 26: {
            if (hedgeBalanceKey_ == null) {
              HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
            }
            input.ReadMessage(HedgeBalanceKey);
            break;
          }
          case 34: {
            if (fromUtcTimestamp_ == null) {
              FromUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(FromUtcTimestamp);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Hedge book details report.
  /// </summary>
  public sealed partial class HedgeBookDetailsReport : pb::IMessage<HedgeBookDetailsReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeBookDetailsReport> _parser = new pb::MessageParser<HedgeBookDetailsReport>(() => new HedgeBookDetailsReport());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeBookDetailsReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBookDetailsReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBookDetailsReport(HedgeBookDetailsReport other) : this() {
      _hasBits0 = other._hasBits0;
      isSnapshot_ = other.isSnapshot_;
      isLastPart_ = other.isLastPart_;
      cashOrderDetails_ = other.cashOrderDetails_.Clone();
      hedgeOrderDetails_ = other.hedgeOrderDetails_.Clone();
      cashToHedgeOrdersLink_ = other.cashToHedgeOrdersLink_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeBookDetailsReport Clone() {
      return new HedgeBookDetailsReport(this);
    }

    /// <summary>Field number for the "is_snapshot" field.</summary>
    public const int IsSnapshotFieldNumber = 1;
    private readonly static bool IsSnapshotDefaultValue = false;

    private bool isSnapshot_;
    /// <summary>
    /// True if this is a snapshot (all previously known data about this hedge book should be cleaned).
    /// False used for incremental updates.
    /// Snapshot will be sent only once after subscription. May be sent in multiple parts. Each part will have this field
    /// set to true. False by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSnapshot {
      get { if ((_hasBits0 & 1) != 0) { return isSnapshot_; } else { return IsSnapshotDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isSnapshot_ = value;
      }
    }
    /// <summary>Gets whether the "is_snapshot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsSnapshot {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_snapshot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsSnapshot() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_last_part" field.</summary>
    public const int IsLastPartFieldNumber = 2;
    private readonly static bool IsLastPartDefaultValue = false;

    private bool isLastPart_;
    /// <summary>
    /// If true - then this message mean last part of multi-parted snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPart {
      get { if ((_hasBits0 & 2) != 0) { return isLastPart_; } else { return IsLastPartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isLastPart_ = value;
      }
    }
    /// <summary>Gets whether the "is_last_part" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsLastPart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_last_part" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsLastPart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "cash_order_details" field.</summary>
    public const int CashOrderDetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Otc1.CashOrderDetails> _repeated_cashOrderDetails_codec
        = pb::FieldCodec.ForMessage(26, global::Otc1.CashOrderDetails.Parser);
    private readonly pbc::RepeatedField<global::Otc1.CashOrderDetails> cashOrderDetails_ = new pbc::RepeatedField<global::Otc1.CashOrderDetails>();
    /// <summary>
    /// List of cash orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Otc1.CashOrderDetails> CashOrderDetails {
      get { return cashOrderDetails_; }
    }

    /// <summary>Field number for the "hedge_order_details" field.</summary>
    public const int HedgeOrderDetailsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Otc1.HedgeOrderDetails> _repeated_hedgeOrderDetails_codec
        = pb::FieldCodec.ForMessage(34, global::Otc1.HedgeOrderDetails.Parser);
    private readonly pbc::RepeatedField<global::Otc1.HedgeOrderDetails> hedgeOrderDetails_ = new pbc::RepeatedField<global::Otc1.HedgeOrderDetails>();
    /// <summary>
    /// List of hedge orders.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Otc1.HedgeOrderDetails> HedgeOrderDetails {
      get { return hedgeOrderDetails_; }
    }

    /// <summary>Field number for the "cash_to_hedge_orders_link" field.</summary>
    public const int CashToHedgeOrdersLinkFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Otc1.CashToHedgeOrdersLink> _repeated_cashToHedgeOrdersLink_codec
        = pb::FieldCodec.ForMessage(42, global::Otc1.CashToHedgeOrdersLink.Parser);
    private readonly pbc::RepeatedField<global::Otc1.CashToHedgeOrdersLink> cashToHedgeOrdersLink_ = new pbc::RepeatedField<global::Otc1.CashToHedgeOrdersLink>();
    /// <summary>
    /// List of links between cash and hedge orders.
    /// Only one link between particular cash and hedge orders may exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Otc1.CashToHedgeOrdersLink> CashToHedgeOrdersLink {
      get { return cashToHedgeOrdersLink_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeBookDetailsReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeBookDetailsReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSnapshot != other.IsSnapshot) return false;
      if (IsLastPart != other.IsLastPart) return false;
      if(!cashOrderDetails_.Equals(other.cashOrderDetails_)) return false;
      if(!hedgeOrderDetails_.Equals(other.hedgeOrderDetails_)) return false;
      if(!cashToHedgeOrdersLink_.Equals(other.cashToHedgeOrdersLink_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsSnapshot) hash ^= IsSnapshot.GetHashCode();
      if (HasIsLastPart) hash ^= IsLastPart.GetHashCode();
      hash ^= cashOrderDetails_.GetHashCode();
      hash ^= hedgeOrderDetails_.GetHashCode();
      hash ^= cashToHedgeOrdersLink_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsSnapshot) {
        output.WriteRawTag(8);
        output.WriteBool(IsSnapshot);
      }
      if (HasIsLastPart) {
        output.WriteRawTag(16);
        output.WriteBool(IsLastPart);
      }
      cashOrderDetails_.WriteTo(output, _repeated_cashOrderDetails_codec);
      hedgeOrderDetails_.WriteTo(output, _repeated_hedgeOrderDetails_codec);
      cashToHedgeOrdersLink_.WriteTo(output, _repeated_cashToHedgeOrdersLink_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsSnapshot) {
        output.WriteRawTag(8);
        output.WriteBool(IsSnapshot);
      }
      if (HasIsLastPart) {
        output.WriteRawTag(16);
        output.WriteBool(IsLastPart);
      }
      cashOrderDetails_.WriteTo(ref output, _repeated_cashOrderDetails_codec);
      hedgeOrderDetails_.WriteTo(ref output, _repeated_hedgeOrderDetails_codec);
      cashToHedgeOrdersLink_.WriteTo(ref output, _repeated_cashToHedgeOrdersLink_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIsSnapshot) {
        size += 1 + 1;
      }
      if (HasIsLastPart) {
        size += 1 + 1;
      }
      size += cashOrderDetails_.CalculateSize(_repeated_cashOrderDetails_codec);
      size += hedgeOrderDetails_.CalculateSize(_repeated_hedgeOrderDetails_codec);
      size += cashToHedgeOrdersLink_.CalculateSize(_repeated_cashToHedgeOrdersLink_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeBookDetailsReport other) {
      if (other == null) {
        return;
      }
      if (other.HasIsSnapshot) {
        IsSnapshot = other.IsSnapshot;
      }
      if (other.HasIsLastPart) {
        IsLastPart = other.IsLastPart;
      }
      cashOrderDetails_.Add(other.cashOrderDetails_);
      hedgeOrderDetails_.Add(other.hedgeOrderDetails_);
      cashToHedgeOrdersLink_.Add(other.cashToHedgeOrdersLink_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSnapshot = input.ReadBool();
            break;
          }
          case 16: {
            IsLastPart = input.ReadBool();
            break;
          }
          case 26: {
            cashOrderDetails_.AddEntriesFrom(input, _repeated_cashOrderDetails_codec);
            break;
          }
          case 34: {
            hedgeOrderDetails_.AddEntriesFrom(input, _repeated_hedgeOrderDetails_codec);
            break;
          }
          case 42: {
            cashToHedgeOrdersLink_.AddEntriesFrom(input, _repeated_cashToHedgeOrdersLink_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsSnapshot = input.ReadBool();
            break;
          }
          case 16: {
            IsLastPart = input.ReadBool();
            break;
          }
          case 26: {
            cashOrderDetails_.AddEntriesFrom(ref input, _repeated_cashOrderDetails_codec);
            break;
          }
          case 34: {
            hedgeOrderDetails_.AddEntriesFrom(ref input, _repeated_hedgeOrderDetails_codec);
            break;
          }
          case 42: {
            cashToHedgeOrdersLink_.AddEntriesFrom(ref input, _repeated_cashToHedgeOrdersLink_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Cash order details.
  /// </summary>
  public sealed partial class CashOrderDetails : pb::IExtendableMessage<CashOrderDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CashOrderDetails> _parser = new pb::MessageParser<CashOrderDetails>(() => new CashOrderDetails());
    private pb::UnknownFieldSet _unknownFields;
    private pb::ExtensionSet<CashOrderDetails> _extensions;
    private pb::ExtensionSet<CashOrderDetails> _Extensions { get { return _extensions; } }
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CashOrderDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CashOrderDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CashOrderDetails(CashOrderDetails other) : this() {
      _hasBits0 = other._hasBits0;
      chainOrderId_ = other.chainOrderId_;
      deleted_ = other.deleted_;
      accountId_ = other.accountId_;
      contractId_ = other.contractId_;
      hedgeUtcTimestamp_ = other.hedgeUtcTimestamp_ != null ? other.hedgeUtcTimestamp_.Clone() : null;
      units_ = other.units_ != null ? other.units_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      _extensions = pb::ExtensionSet.Clone(other._extensions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CashOrderDetails Clone() {
      return new CashOrderDetails(this);
    }

    /// <summary>Field number for the "chain_order_id" field.</summary>
    public const int ChainOrderIdFieldNumber = 1;
    private readonly static string ChainOrderIdDefaultValue = "";

    private string chainOrderId_;
    /// <summary>
    /// Order ID assigned by server to originally placed order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChainOrderId {
      get { return chainOrderId_ ?? ChainOrderIdDefaultValue; }
      set {
        chainOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "chain_order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChainOrderId {
      get { return chainOrderId_ != null; }
    }
    /// <summary>Clears the value of the "chain_order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChainOrderId() {
      chainOrderId_ = null;
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 2;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    /// <summary>
    /// Deleted flag is used in updates when entity is removed.
    /// Only chain_order_id will be provided in this case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { if ((_hasBits0 & 1) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeleted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeleted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 3;
    private readonly static int AccountIdDefaultValue = 0;

    private int accountId_;
    /// <summary>
    /// Account ID in CQG trade routing system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountId {
      get { if ((_hasBits0 & 2) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "contract_id" field.</summary>
    public const int ContractIdFieldNumber = 4;
    private readonly static uint ContractIdDefaultValue = 0;

    private uint contractId_;
    /// <summary>
    /// Server side contract id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ContractId {
      get { if ((_hasBits0 & 4) != 0) { return contractId_; } else { return ContractIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        contractId_ = value;
      }
    }
    /// <summary>Gets whether the "contract_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContractId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "contract_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContractId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hedge_utc_timestamp" field.</summary>
    public const int HedgeUtcTimestampFieldNumber = 5;
    private global::Google.Protobuf.Timestamp hedgeUtcTimestamp_;
    /// <summary>
    /// Time when order added to hedge balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp HedgeUtcTimestamp {
      get { return hedgeUtcTimestamp_; }
      set {
        hedgeUtcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 6;
    private global::Cqg.Decimal units_;
    /// <summary>
    /// Total order size in units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CashOrderDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CashOrderDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainOrderId != other.ChainOrderId) return false;
      if (Deleted != other.Deleted) return false;
      if (AccountId != other.AccountId) return false;
      if (ContractId != other.ContractId) return false;
      if (!object.Equals(HedgeUtcTimestamp, other.HedgeUtcTimestamp)) return false;
      if (!object.Equals(Units, other.Units)) return false;
      if (!Equals(_extensions, other._extensions)) {
        return false;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChainOrderId) hash ^= ChainOrderId.GetHashCode();
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasContractId) hash ^= ContractId.GetHashCode();
      if (hedgeUtcTimestamp_ != null) hash ^= HedgeUtcTimestamp.GetHashCode();
      if (units_ != null) hash ^= Units.GetHashCode();
      if (_extensions != null) {
        hash ^= _extensions.GetHashCode();
      }
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChainOrderId) {
        output.WriteRawTag(10);
        output.WriteString(ChainOrderId);
      }
      if (HasDeleted) {
        output.WriteRawTag(16);
        output.WriteBool(Deleted);
      }
      if (HasAccountId) {
        output.WriteRawTag(24);
        output.WriteSInt32(AccountId);
      }
      if (HasContractId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ContractId);
      }
      if (hedgeUtcTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HedgeUtcTimestamp);
      }
      if (units_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Units);
      }
      if (_extensions != null) {
        _extensions.WriteTo(output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChainOrderId) {
        output.WriteRawTag(10);
        output.WriteString(ChainOrderId);
      }
      if (HasDeleted) {
        output.WriteRawTag(16);
        output.WriteBool(Deleted);
      }
      if (HasAccountId) {
        output.WriteRawTag(24);
        output.WriteSInt32(AccountId);
      }
      if (HasContractId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ContractId);
      }
      if (hedgeUtcTimestamp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HedgeUtcTimestamp);
      }
      if (units_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Units);
      }
      if (_extensions != null) {
        _extensions.WriteTo(ref output);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasChainOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainOrderId);
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountId);
      }
      if (HasContractId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ContractId);
      }
      if (hedgeUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeUtcTimestamp);
      }
      if (units_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Units);
      }
      if (_extensions != null) {
        size += _extensions.CalculateSize();
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CashOrderDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasChainOrderId) {
        ChainOrderId = other.ChainOrderId;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasContractId) {
        ContractId = other.ContractId;
      }
      if (other.hedgeUtcTimestamp_ != null) {
        if (hedgeUtcTimestamp_ == null) {
          HedgeUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        HedgeUtcTimestamp.MergeFrom(other.HedgeUtcTimestamp);
      }
      if (other.units_ != null) {
        if (units_ == null) {
          Units = new global::Cqg.Decimal();
        }
        Units.MergeFrom(other.Units);
      }
      pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            }
            break;
          case 10: {
            ChainOrderId = input.ReadString();
            break;
          }
          case 16: {
            Deleted = input.ReadBool();
            break;
          }
          case 24: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 32: {
            ContractId = input.ReadUInt32();
            break;
          }
          case 42: {
            if (hedgeUtcTimestamp_ == null) {
              HedgeUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(HedgeUtcTimestamp);
            break;
          }
          case 50: {
            if (units_ == null) {
              Units = new global::Cqg.Decimal();
            }
            input.ReadMessage(Units);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            }
            break;
          case 10: {
            ChainOrderId = input.ReadString();
            break;
          }
          case 16: {
            Deleted = input.ReadBool();
            break;
          }
          case 24: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 32: {
            ContractId = input.ReadUInt32();
            break;
          }
          case 42: {
            if (hedgeUtcTimestamp_ == null) {
              HedgeUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(HedgeUtcTimestamp);
            break;
          }
          case 50: {
            if (units_ == null) {
              Units = new global::Cqg.Decimal();
            }
            input.ReadMessage(Units);
            break;
          }
        }
      }
    }
    #endif

    public TValue GetExtension<TValue>(pb::Extension<CashOrderDetails, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<CashOrderDetails, TValue> extension) {
      return pb::ExtensionSet.Get(ref _extensions, extension);
    }
    public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<CashOrderDetails, TValue> extension) {
      return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
    }
    public void SetExtension<TValue>(pb::Extension<CashOrderDetails, TValue> extension, TValue value) {
      pb::ExtensionSet.Set(ref _extensions, extension, value);
    }
    public bool HasExtension<TValue>(pb::Extension<CashOrderDetails, TValue> extension) {
      return pb::ExtensionSet.Has(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::Extension<CashOrderDetails, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }
    public void ClearExtension<TValue>(pb::RepeatedExtension<CashOrderDetails, TValue> extension) {
      pb::ExtensionSet.Clear(ref _extensions, extension);
    }

  }

  /// <summary>
  /// Hedge order details.
  /// </summary>
  public sealed partial class HedgeOrderDetails : pb::IMessage<HedgeOrderDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HedgeOrderDetails> _parser = new pb::MessageParser<HedgeOrderDetails>(() => new HedgeOrderDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HedgeOrderDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeOrderDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeOrderDetails(HedgeOrderDetails other) : this() {
      _hasBits0 = other._hasBits0;
      chainOrderId_ = other.chainOrderId_;
      deleted_ = other.deleted_;
      hedgeUtcTimestamp_ = other.hedgeUtcTimestamp_ != null ? other.hedgeUtcTimestamp_.Clone() : null;
      units_ = other.units_ != null ? other.units_.Clone() : null;
      openUnits_ = other.openUnits_ != null ? other.openUnits_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HedgeOrderDetails Clone() {
      return new HedgeOrderDetails(this);
    }

    /// <summary>Field number for the "chain_order_id" field.</summary>
    public const int ChainOrderIdFieldNumber = 1;
    private readonly static string ChainOrderIdDefaultValue = "";

    private string chainOrderId_;
    /// <summary>
    /// Order ID assigned by server to originally placed order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChainOrderId {
      get { return chainOrderId_ ?? ChainOrderIdDefaultValue; }
      set {
        chainOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "chain_order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChainOrderId {
      get { return chainOrderId_ != null; }
    }
    /// <summary>Clears the value of the "chain_order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChainOrderId() {
      chainOrderId_ = null;
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 2;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    /// <summary>
    /// Deleted flag is used in updates when entity is removed.
    /// Only chain_order_id will be provided in this case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { if ((_hasBits0 & 1) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeleted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeleted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hedge_utc_timestamp" field.</summary>
    public const int HedgeUtcTimestampFieldNumber = 3;
    private global::Google.Protobuf.Timestamp hedgeUtcTimestamp_;
    /// <summary>
    /// Time when hedge order placed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp HedgeUtcTimestamp {
      get { return hedgeUtcTimestamp_; }
      set {
        hedgeUtcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 4;
    private global::Cqg.Decimal units_;
    /// <summary>
    /// Total order size in units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "open_units" field.</summary>
    public const int OpenUnitsFieldNumber = 5;
    private global::Cqg.Decimal openUnits_;
    /// <summary>
    /// Quantity open for further execution in units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal OpenUnits {
      get { return openUnits_; }
      set {
        openUnits_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HedgeOrderDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HedgeOrderDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChainOrderId != other.ChainOrderId) return false;
      if (Deleted != other.Deleted) return false;
      if (!object.Equals(HedgeUtcTimestamp, other.HedgeUtcTimestamp)) return false;
      if (!object.Equals(Units, other.Units)) return false;
      if (!object.Equals(OpenUnits, other.OpenUnits)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChainOrderId) hash ^= ChainOrderId.GetHashCode();
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (hedgeUtcTimestamp_ != null) hash ^= HedgeUtcTimestamp.GetHashCode();
      if (units_ != null) hash ^= Units.GetHashCode();
      if (openUnits_ != null) hash ^= OpenUnits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChainOrderId) {
        output.WriteRawTag(10);
        output.WriteString(ChainOrderId);
      }
      if (HasDeleted) {
        output.WriteRawTag(16);
        output.WriteBool(Deleted);
      }
      if (hedgeUtcTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeUtcTimestamp);
      }
      if (units_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Units);
      }
      if (openUnits_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OpenUnits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChainOrderId) {
        output.WriteRawTag(10);
        output.WriteString(ChainOrderId);
      }
      if (HasDeleted) {
        output.WriteRawTag(16);
        output.WriteBool(Deleted);
      }
      if (hedgeUtcTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeUtcTimestamp);
      }
      if (units_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Units);
      }
      if (openUnits_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OpenUnits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasChainOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChainOrderId);
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (hedgeUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeUtcTimestamp);
      }
      if (units_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Units);
      }
      if (openUnits_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenUnits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HedgeOrderDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasChainOrderId) {
        ChainOrderId = other.ChainOrderId;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.hedgeUtcTimestamp_ != null) {
        if (hedgeUtcTimestamp_ == null) {
          HedgeUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        HedgeUtcTimestamp.MergeFrom(other.HedgeUtcTimestamp);
      }
      if (other.units_ != null) {
        if (units_ == null) {
          Units = new global::Cqg.Decimal();
        }
        Units.MergeFrom(other.Units);
      }
      if (other.openUnits_ != null) {
        if (openUnits_ == null) {
          OpenUnits = new global::Cqg.Decimal();
        }
        OpenUnits.MergeFrom(other.OpenUnits);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChainOrderId = input.ReadString();
            break;
          }
          case 16: {
            Deleted = input.ReadBool();
            break;
          }
          case 26: {
            if (hedgeUtcTimestamp_ == null) {
              HedgeUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(HedgeUtcTimestamp);
            break;
          }
          case 34: {
            if (units_ == null) {
              Units = new global::Cqg.Decimal();
            }
            input.ReadMessage(Units);
            break;
          }
          case 42: {
            if (openUnits_ == null) {
              OpenUnits = new global::Cqg.Decimal();
            }
            input.ReadMessage(OpenUnits);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ChainOrderId = input.ReadString();
            break;
          }
          case 16: {
            Deleted = input.ReadBool();
            break;
          }
          case 26: {
            if (hedgeUtcTimestamp_ == null) {
              HedgeUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(HedgeUtcTimestamp);
            break;
          }
          case 34: {
            if (units_ == null) {
              Units = new global::Cqg.Decimal();
            }
            input.ReadMessage(Units);
            break;
          }
          case 42: {
            if (openUnits_ == null) {
              OpenUnits = new global::Cqg.Decimal();
            }
            input.ReadMessage(OpenUnits);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Cash to hedge orders link.
  /// </summary>
  public sealed partial class CashToHedgeOrdersLink : pb::IMessage<CashToHedgeOrdersLink>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CashToHedgeOrdersLink> _parser = new pb::MessageParser<CashToHedgeOrdersLink>(() => new CashToHedgeOrdersLink());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CashToHedgeOrdersLink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CashToHedgeOrdersLink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CashToHedgeOrdersLink(CashToHedgeOrdersLink other) : this() {
      _hasBits0 = other._hasBits0;
      deleted_ = other.deleted_;
      linkUtcTimestamp_ = other.linkUtcTimestamp_ != null ? other.linkUtcTimestamp_.Clone() : null;
      cashOrderId_ = other.cashOrderId_;
      hedgeOrderId_ = other.hedgeOrderId_;
      linkUnits_ = other.linkUnits_ != null ? other.linkUnits_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CashToHedgeOrdersLink Clone() {
      return new CashToHedgeOrdersLink(this);
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 1;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    /// <summary>
    /// Deleted flag is used in updates when entity is removed.
    /// Only link_id will be provided in this case.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { if ((_hasBits0 & 1) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeleted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeleted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "link_utc_timestamp" field.</summary>
    public const int LinkUtcTimestampFieldNumber = 2;
    private global::Google.Protobuf.Timestamp linkUtcTimestamp_;
    /// <summary>
    /// Time when link created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Timestamp LinkUtcTimestamp {
      get { return linkUtcTimestamp_; }
      set {
        linkUtcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "cash_order_id" field.</summary>
    public const int CashOrderIdFieldNumber = 3;
    private readonly static string CashOrderIdDefaultValue = "";

    private string cashOrderId_;
    /// <summary>
    /// Cash order ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashOrderId {
      get { return cashOrderId_ ?? CashOrderIdDefaultValue; }
      set {
        cashOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "cash_order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCashOrderId {
      get { return cashOrderId_ != null; }
    }
    /// <summary>Clears the value of the "cash_order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCashOrderId() {
      cashOrderId_ = null;
    }

    /// <summary>Field number for the "hedge_order_id" field.</summary>
    public const int HedgeOrderIdFieldNumber = 4;
    private readonly static string HedgeOrderIdDefaultValue = "";

    private string hedgeOrderId_;
    /// <summary>
    /// Hedge Order ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HedgeOrderId {
      get { return hedgeOrderId_ ?? HedgeOrderIdDefaultValue; }
      set {
        hedgeOrderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hedge_order_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHedgeOrderId {
      get { return hedgeOrderId_ != null; }
    }
    /// <summary>Clears the value of the "hedge_order_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHedgeOrderId() {
      hedgeOrderId_ = null;
    }

    /// <summary>Field number for the "link_units" field.</summary>
    public const int LinkUnitsFieldNumber = 5;
    private global::Cqg.Decimal linkUnits_;
    /// <summary>
    /// Hedge size covered by this link in units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal LinkUnits {
      get { return linkUnits_; }
      set {
        linkUnits_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CashToHedgeOrdersLink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CashToHedgeOrdersLink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deleted != other.Deleted) return false;
      if (!object.Equals(LinkUtcTimestamp, other.LinkUtcTimestamp)) return false;
      if (CashOrderId != other.CashOrderId) return false;
      if (HedgeOrderId != other.HedgeOrderId) return false;
      if (!object.Equals(LinkUnits, other.LinkUnits)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (linkUtcTimestamp_ != null) hash ^= LinkUtcTimestamp.GetHashCode();
      if (HasCashOrderId) hash ^= CashOrderId.GetHashCode();
      if (HasHedgeOrderId) hash ^= HedgeOrderId.GetHashCode();
      if (linkUnits_ != null) hash ^= LinkUnits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeleted) {
        output.WriteRawTag(8);
        output.WriteBool(Deleted);
      }
      if (linkUtcTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LinkUtcTimestamp);
      }
      if (HasCashOrderId) {
        output.WriteRawTag(26);
        output.WriteString(CashOrderId);
      }
      if (HasHedgeOrderId) {
        output.WriteRawTag(34);
        output.WriteString(HedgeOrderId);
      }
      if (linkUnits_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinkUnits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeleted) {
        output.WriteRawTag(8);
        output.WriteBool(Deleted);
      }
      if (linkUtcTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LinkUtcTimestamp);
      }
      if (HasCashOrderId) {
        output.WriteRawTag(26);
        output.WriteString(CashOrderId);
      }
      if (HasHedgeOrderId) {
        output.WriteRawTag(34);
        output.WriteString(HedgeOrderId);
      }
      if (linkUnits_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinkUnits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (linkUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinkUtcTimestamp);
      }
      if (HasCashOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CashOrderId);
      }
      if (HasHedgeOrderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HedgeOrderId);
      }
      if (linkUnits_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinkUnits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CashToHedgeOrdersLink other) {
      if (other == null) {
        return;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      if (other.linkUtcTimestamp_ != null) {
        if (linkUtcTimestamp_ == null) {
          LinkUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        LinkUtcTimestamp.MergeFrom(other.LinkUtcTimestamp);
      }
      if (other.HasCashOrderId) {
        CashOrderId = other.CashOrderId;
      }
      if (other.HasHedgeOrderId) {
        HedgeOrderId = other.HedgeOrderId;
      }
      if (other.linkUnits_ != null) {
        if (linkUnits_ == null) {
          LinkUnits = new global::Cqg.Decimal();
        }
        LinkUnits.MergeFrom(other.LinkUnits);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Deleted = input.ReadBool();
            break;
          }
          case 18: {
            if (linkUtcTimestamp_ == null) {
              LinkUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(LinkUtcTimestamp);
            break;
          }
          case 26: {
            CashOrderId = input.ReadString();
            break;
          }
          case 34: {
            HedgeOrderId = input.ReadString();
            break;
          }
          case 42: {
            if (linkUnits_ == null) {
              LinkUnits = new global::Cqg.Decimal();
            }
            input.ReadMessage(LinkUnits);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Deleted = input.ReadBool();
            break;
          }
          case 18: {
            if (linkUtcTimestamp_ == null) {
              LinkUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(LinkUtcTimestamp);
            break;
          }
          case 26: {
            CashOrderId = input.ReadString();
            break;
          }
          case 34: {
            HedgeOrderId = input.ReadString();
            break;
          }
          case 42: {
            if (linkUnits_ == null) {
              LinkUnits = new global::Cqg.Decimal();
            }
            input.ReadMessage(LinkUnits);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Offset hedge balance request.
  /// </summary>
  public sealed partial class OffsetHedgeBalanceRequest : pb::IMessage<OffsetHedgeBalanceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OffsetHedgeBalanceRequest> _parser = new pb::MessageParser<OffsetHedgeBalanceRequest>(() => new OffsetHedgeBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OffsetHedgeBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetHedgeBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetHedgeBalanceRequest(OffsetHedgeBalanceRequest other) : this() {
      _hasBits0 = other._hasBits0;
      otcInstanceId_ = other.otcInstanceId_;
      hedgeBalanceKey_ = other.hedgeBalanceKey_ != null ? other.hedgeBalanceKey_.Clone() : null;
      hedgeBalanceOffset_ = other.hedgeBalanceOffset_ != null ? other.hedgeBalanceOffset_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetHedgeBalanceRequest Clone() {
      return new OffsetHedgeBalanceRequest(this);
    }

    /// <summary>Field number for the "otc_instance_id" field.</summary>
    public const int OtcInstanceIdFieldNumber = 1;
    private readonly static uint OtcInstanceIdDefaultValue = 0;

    private uint otcInstanceId_;
    /// <summary>
    /// OTC instance id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OtcInstanceId {
      get { if ((_hasBits0 & 1) != 0) { return otcInstanceId_; } else { return OtcInstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        otcInstanceId_ = value;
      }
    }
    /// <summary>Gets whether the "otc_instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOtcInstanceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "otc_instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOtcInstanceId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "hedge_balance_key" field.</summary>
    public const int HedgeBalanceKeyFieldNumber = 2;
    private global::Otc1.HedgeBalanceKey hedgeBalanceKey_;
    /// <summary>
    /// Hedge balance key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Otc1.HedgeBalanceKey HedgeBalanceKey {
      get { return hedgeBalanceKey_; }
      set {
        hedgeBalanceKey_ = value;
      }
    }

    /// <summary>Field number for the "hedge_balance_offset" field.</summary>
    public const int HedgeBalanceOffsetFieldNumber = 3;
    private global::Cqg.Decimal hedgeBalanceOffset_;
    /// <summary>
    /// Hedge balance offset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cqg.Decimal HedgeBalanceOffset {
      get { return hedgeBalanceOffset_; }
      set {
        hedgeBalanceOffset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OffsetHedgeBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OffsetHedgeBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OtcInstanceId != other.OtcInstanceId) return false;
      if (!object.Equals(HedgeBalanceKey, other.HedgeBalanceKey)) return false;
      if (!object.Equals(HedgeBalanceOffset, other.HedgeBalanceOffset)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOtcInstanceId) hash ^= OtcInstanceId.GetHashCode();
      if (hedgeBalanceKey_ != null) hash ^= HedgeBalanceKey.GetHashCode();
      if (hedgeBalanceOffset_ != null) hash ^= HedgeBalanceOffset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOtcInstanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(OtcInstanceId);
      }
      if (hedgeBalanceKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HedgeBalanceKey);
      }
      if (hedgeBalanceOffset_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBalanceOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOtcInstanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(OtcInstanceId);
      }
      if (hedgeBalanceKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HedgeBalanceKey);
      }
      if (hedgeBalanceOffset_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HedgeBalanceOffset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOtcInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OtcInstanceId);
      }
      if (hedgeBalanceKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBalanceKey);
      }
      if (hedgeBalanceOffset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HedgeBalanceOffset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OffsetHedgeBalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasOtcInstanceId) {
        OtcInstanceId = other.OtcInstanceId;
      }
      if (other.hedgeBalanceKey_ != null) {
        if (hedgeBalanceKey_ == null) {
          HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
        }
        HedgeBalanceKey.MergeFrom(other.HedgeBalanceKey);
      }
      if (other.hedgeBalanceOffset_ != null) {
        if (hedgeBalanceOffset_ == null) {
          HedgeBalanceOffset = new global::Cqg.Decimal();
        }
        HedgeBalanceOffset.MergeFrom(other.HedgeBalanceOffset);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (hedgeBalanceKey_ == null) {
              HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
            }
            input.ReadMessage(HedgeBalanceKey);
            break;
          }
          case 26: {
            if (hedgeBalanceOffset_ == null) {
              HedgeBalanceOffset = new global::Cqg.Decimal();
            }
            input.ReadMessage(HedgeBalanceOffset);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (hedgeBalanceKey_ == null) {
              HedgeBalanceKey = new global::Otc1.HedgeBalanceKey();
            }
            input.ReadMessage(HedgeBalanceKey);
            break;
          }
          case 26: {
            if (hedgeBalanceOffset_ == null) {
              HedgeBalanceOffset = new global::Cqg.Decimal();
            }
            input.ReadMessage(HedgeBalanceOffset);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Offset hedge balance result.
  /// </summary>
  public sealed partial class OffsetHedgeBalanceResult : pb::IMessage<OffsetHedgeBalanceResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OffsetHedgeBalanceResult> _parser = new pb::MessageParser<OffsetHedgeBalanceResult>(() => new OffsetHedgeBalanceResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OffsetHedgeBalanceResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetHedgeBalanceResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetHedgeBalanceResult(OffsetHedgeBalanceResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OffsetHedgeBalanceResult Clone() {
      return new OffsetHedgeBalanceResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OffsetHedgeBalanceResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OffsetHedgeBalanceResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OffsetHedgeBalanceResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Change OTC state request.
  /// Shall provide OTC instance ID.
  /// </summary>
  public sealed partial class ChangeOtcStateRequest : pb::IMessage<ChangeOtcStateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeOtcStateRequest> _parser = new pb::MessageParser<ChangeOtcStateRequest>(() => new ChangeOtcStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeOtcStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeOtcStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeOtcStateRequest(ChangeOtcStateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      otcInstanceId_ = other.otcInstanceId_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeOtcStateRequest Clone() {
      return new ChangeOtcStateRequest(this);
    }

    /// <summary>Field number for the "otc_instance_id" field.</summary>
    public const int OtcInstanceIdFieldNumber = 1;
    private readonly static uint OtcInstanceIdDefaultValue = 0;

    private uint otcInstanceId_;
    /// <summary>
    /// OTC instance id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OtcInstanceId {
      get { if ((_hasBits0 & 1) != 0) { return otcInstanceId_; } else { return OtcInstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        otcInstanceId_ = value;
      }
    }
    /// <summary>Gets whether the "otc_instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOtcInstanceId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "otc_instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOtcInstanceId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private readonly static uint ActionDefaultValue = 0;

    private uint action_;
    /// <summary>
    /// New OTC instance state.
    /// This field is associated with Action enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Action {
      get { if ((_hasBits0 & 2) != 0) { return action_; } else { return ActionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        action_ = value;
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAction {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeOtcStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeOtcStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OtcInstanceId != other.OtcInstanceId) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOtcInstanceId) hash ^= OtcInstanceId.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOtcInstanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(OtcInstanceId);
      }
      if (HasAction) {
        output.WriteRawTag(16);
        output.WriteUInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOtcInstanceId) {
        output.WriteRawTag(8);
        output.WriteUInt32(OtcInstanceId);
      }
      if (HasAction) {
        output.WriteRawTag(16);
        output.WriteUInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasOtcInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OtcInstanceId);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeOtcStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasOtcInstanceId) {
        OtcInstanceId = other.OtcInstanceId;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
          case 16: {
            Action = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OtcInstanceId = input.ReadUInt32();
            break;
          }
          case 16: {
            Action = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ChangeOtcStateRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Action {
        /// <summary>
        /// Activate previously suspended OTC instance.
        /// </summary>
        [pbr::OriginalName("ACTIVATE")] Activate = 0,
        /// <summary>
        /// Suspend active OTC instance.
        /// OTC will reject all client orders and will not send hedge orders to exchange.
        /// </summary>
        [pbr::OriginalName("SUSPEND")] Suspend = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Change OTC state result.
  /// </summary>
  public sealed partial class ChangeOtcStateResult : pb::IMessage<ChangeOtcStateResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeOtcStateResult> _parser = new pb::MessageParser<ChangeOtcStateResult>(() => new ChangeOtcStateResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeOtcStateResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Otc1.Otc1Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeOtcStateResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeOtcStateResult(ChangeOtcStateResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeOtcStateResult Clone() {
      return new ChangeOtcStateResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeOtcStateResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeOtcStateResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeOtcStateResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
